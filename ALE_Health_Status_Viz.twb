<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.1017.1259                               -->
<workbook original-version='18.1' source-build='2019.3.1 (20193.19.1017.1259)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='projectdata (3)' inline='true' name='federated.0tav64j0kajwsi10hc6h10tqqur2 (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='projectdata' name='textscan.00ox8w309vny4g160t7680knsnrv (copy)'>
            <connection class='textscan' directory='C:/Users/12409/Desktop/FALL-2019/2STAT515/CLASSES/Week-13-14-FINAL PROJECT/0_Submitted/ALE.twb Files/Data/FOr Final stat' filename='projectdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.00ox8w309vny4g160t7680knsnrv (copy)' name='projectdata.csv' table='[projectdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='State_FIPS_Code' ordinal='0' />
            <column datatype='integer' name='County_FIPS_Code' ordinal='1' />
            <column datatype='string' name='CHSI_County_Name' ordinal='2' />
            <column datatype='string' name='CHSI_State_Name' ordinal='3' />
            <column datatype='string' name='CHSI_State_Abbr' ordinal='4' />
            <column datatype='integer' name='Strata_ID_Number' ordinal='5' />
            <column datatype='string' name='Strata_Determining_Factors' ordinal='6' />
            <column datatype='integer' name='Number_Counties' ordinal='7' />
            <column datatype='integer' name='Population_Size' ordinal='8' />
            <column datatype='integer' name='Population_Density' ordinal='9' />
            <column datatype='real' name='ALE' ordinal='10' />
            <column datatype='real' name='All_Death' ordinal='11' />
            <column datatype='real' name='Health_Status' ordinal='12' />
            <column datatype='real' name='Unhealthy_Days' ordinal='13' />
            <column datatype='real' name='Poverty' ordinal='14' />
            <column datatype='real' name='Age_19_Under' ordinal='15' />
            <column datatype='real' name='Age_19_64' ordinal='16' />
            <column datatype='real' name='Age_65_84' ordinal='17' />
            <column datatype='real' name='Age_85_and_Over' ordinal='18' />
            <column datatype='real' name='White' ordinal='19' />
            <column datatype='real' name='Black' ordinal='20' />
            <column datatype='real' name='Native_American' ordinal='21' />
            <column datatype='real' name='Asian' ordinal='22' />
            <column datatype='real' name='Hispanic' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_FIPS_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State_FIPS_Code]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>State_FIPS_Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County_FIPS_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[County_FIPS_Code]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>County_FIPS_Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHSI_County_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CHSI_County_Name]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>CHSI_County_Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHSI_State_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CHSI_State_Name]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>CHSI_State_Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHSI_State_Abbr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CHSI_State_Abbr]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>CHSI_State_Abbr</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Strata_ID_Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Strata_ID_Number]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Strata_ID_Number</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Strata_Determining_Factors</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Strata_Determining_Factors]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Strata_Determining_Factors</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Counties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number_Counties]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Number_Counties</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population_Size]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Population_Size</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Density</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population_Density]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Population_Density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ALE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ALE]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>ALE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All_Death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[All_Death]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>All_Death</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health_Status</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health_Status]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Health_Status</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unhealthy_Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unhealthy_Days]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Unhealthy_Days</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Poverty]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Poverty</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_19_Under</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_19_Under]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_19_Under</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_19_64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_19_64]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_19_64</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_65_84</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_65_84]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_65_84</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_85_and_Over</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_85_and_Over]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_85_and_Over</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>White</remote-name>
            <remote-type>5</remote-type>
            <local-name>[White]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>White</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Black</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Black]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Black</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Native_American</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Native_American]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Native_American</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asian</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Asian]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Asian</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hispanic</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hispanic]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Hispanic</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
      <column caption='Age 19 64' datatype='real' name='[Age_19_64]' role='measure' type='quantitative' />
      <column caption='Age 19 Under' datatype='real' name='[Age_19_Under]' role='measure' type='quantitative' />
      <column caption='Age 65 84' datatype='real' name='[Age_65_84]' role='measure' type='quantitative' />
      <column caption='Age 85 and Over' datatype='real' name='[Age_85_and_Over]' role='measure' type='quantitative' />
      <column caption='All Death' datatype='real' name='[All_Death]' role='measure' type='quantitative' />
      <column caption='CHSI County Name' datatype='string' name='[CHSI_County_Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='CHSI State Abbr' datatype='string' name='[CHSI_State_Abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='CHSI State Name' datatype='string' name='[CHSI_State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='County FIPS Code' datatype='integer' name='[County_FIPS_Code]' role='dimension' type='ordinal' />
      <column caption='Health Status' datatype='real' name='[Health_Status]' role='measure' type='quantitative' />
      <column caption='Native American' datatype='real' name='[Native_American]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Number Counties' datatype='integer' name='[Number_Counties]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='integer' name='[Population_Density]' role='measure' type='quantitative' />
      <column caption='Population Size' datatype='integer' name='[Population_Size]' role='measure' type='quantitative' />
      <column caption='State FIPS Code' datatype='integer' name='[State_FIPS_Code]' role='dimension' type='ordinal' />
      <column caption='Strata Determining Factors' datatype='string' name='[Strata_Determining_Factors]' role='dimension' type='nominal' />
      <column caption='Strata ID Number' datatype='integer' name='[Strata_ID_Number]' role='dimension' type='ordinal' />
      <column caption='Unhealthy Days' datatype='real' name='[Unhealthy_Days]' role='measure' type='quantitative' />
      <column-instance column='[CHSI_County_Name]' derivation='None' name='[none:CHSI_County_Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.338438' measure-ordering='alphabetic' measure-percentage='0.661562' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CHSI_County_Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chouteau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;De Kalb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Franklin City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manassas City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Virginia Beach City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danville City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kingman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sanders&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Towner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haakon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baltimore City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bristol City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Martinsville City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roger Mills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shoshone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Perkins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portsmouth City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Louis City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Staunton City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dona Ana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harrisonburg City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newport News City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lynchburg City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suffolk City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Richmond City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hampton City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norfolk City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hopewell City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bear Lake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fallon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fredericksburg City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lagrange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;De Baca&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alexandria City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Judith Basin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mora&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roanoke City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweet Grass&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Radford City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Winchester City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Petersburg City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='projectdata (2)' inline='true' name='federated.0tav64j0kajwsi10hc6h10tqqur2 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='projectdata' name='textscan.07jdwgh0xx7kpj176xwop1g6m3vz'>
            <connection class='textscan' directory='C:/Users/12409/Desktop/FALL-2019/2STAT515/CLASSES/Week-13-14-FINAL PROJECT/0_Submitted' filename='projectdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07jdwgh0xx7kpj176xwop1g6m3vz' name='projectdata.csv' table='[projectdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='State_FIPS_Code' ordinal='0' />
            <column datatype='integer' name='County_FIPS_Code' ordinal='1' />
            <column datatype='string' name='CHSI_County_Name' ordinal='2' />
            <column datatype='string' name='CHSI_State_Name' ordinal='3' />
            <column datatype='string' name='CHSI_State_Abbr' ordinal='4' />
            <column datatype='integer' name='Strata_ID_Number' ordinal='5' />
            <column datatype='string' name='Strata_Determining_Factors' ordinal='6' />
            <column datatype='integer' name='Number_Counties' ordinal='7' />
            <column datatype='integer' name='Population_Size' ordinal='8' />
            <column datatype='integer' name='Population_Density' ordinal='9' />
            <column datatype='real' name='ALE' ordinal='10' />
            <column datatype='real' name='All_Death' ordinal='11' />
            <column datatype='real' name='Health_Status' ordinal='12' />
            <column datatype='real' name='Unhealthy_Days' ordinal='13' />
            <column datatype='real' name='Poverty' ordinal='14' />
            <column datatype='real' name='Age_19_Under' ordinal='15' />
            <column datatype='real' name='Age_19_64' ordinal='16' />
            <column datatype='real' name='Age_65_84' ordinal='17' />
            <column datatype='real' name='Age_85_and_Over' ordinal='18' />
            <column datatype='real' name='White' ordinal='19' />
            <column datatype='real' name='Black' ordinal='20' />
            <column datatype='real' name='Native_American' ordinal='21' />
            <column datatype='real' name='Asian' ordinal='22' />
            <column datatype='real' name='Hispanic' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_FIPS_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State_FIPS_Code]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>State_FIPS_Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County_FIPS_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[County_FIPS_Code]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>County_FIPS_Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHSI_County_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CHSI_County_Name]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>CHSI_County_Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHSI_State_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CHSI_State_Name]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>CHSI_State_Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHSI_State_Abbr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CHSI_State_Abbr]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>CHSI_State_Abbr</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Strata_ID_Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Strata_ID_Number]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Strata_ID_Number</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Strata_Determining_Factors</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Strata_Determining_Factors]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Strata_Determining_Factors</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Counties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number_Counties]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Number_Counties</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population_Size]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Population_Size</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Density</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population_Density]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Population_Density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ALE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ALE]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>ALE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All_Death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[All_Death]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>All_Death</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health_Status</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health_Status]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Health_Status</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unhealthy_Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unhealthy_Days]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Unhealthy_Days</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Poverty]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Poverty</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_19_Under</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_19_Under]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_19_Under</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_19_64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_19_64]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_19_64</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_65_84</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_65_84]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_65_84</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_85_and_Over</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_85_and_Over]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_85_and_Over</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>White</remote-name>
            <remote-type>5</remote-type>
            <local-name>[White]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>White</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Black</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Black]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Black</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Native_American</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Native_American]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Native_American</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asian</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Asian]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Asian</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hispanic</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hispanic]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Hispanic</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age 19 64' datatype='real' name='[Age_19_64]' role='measure' type='quantitative' />
      <column caption='Age 19 Under' datatype='real' name='[Age_19_Under]' role='measure' type='quantitative' />
      <column caption='Age 65 84' datatype='real' name='[Age_65_84]' role='measure' type='quantitative' />
      <column caption='Age 85 and Over' datatype='real' name='[Age_85_and_Over]' role='measure' type='quantitative' />
      <column caption='All Death' datatype='real' name='[All_Death]' role='measure' type='quantitative' />
      <column caption='CHSI County Name' datatype='string' name='[CHSI_County_Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='CHSI State Abbr' datatype='string' name='[CHSI_State_Abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='CHSI State Name' datatype='string' name='[CHSI_State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='County FIPS Code' datatype='integer' name='[County_FIPS_Code]' role='dimension' type='ordinal' />
      <column caption='Health Status' datatype='real' name='[Health_Status]' role='measure' type='quantitative' />
      <column caption='Native American' datatype='real' name='[Native_American]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Number Counties' datatype='integer' name='[Number_Counties]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='integer' name='[Population_Density]' role='measure' type='quantitative' />
      <column caption='Population Size' datatype='integer' name='[Population_Size]' role='measure' type='quantitative' />
      <column caption='State FIPS Code' datatype='integer' name='[State_FIPS_Code]' role='dimension' type='ordinal' />
      <column caption='Strata Determining Factors' datatype='string' name='[Strata_Determining_Factors]' role='dimension' type='nominal' />
      <column caption='Strata ID Number' datatype='integer' name='[Strata_ID_Number]' role='dimension' type='ordinal' />
      <column caption='Unhealthy Days' datatype='real' name='[Unhealthy_Days]' role='measure' type='quantitative' />
      <column-instance column='[CHSI_State_Abbr]' derivation='None' name='[none:CHSI_State_Abbr:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.379786' measure-ordering='alphabetic' measure-percentage='0.620214' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CHSI_State_Abbr:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='projectdata' inline='true' name='federated.0tav64j0kajwsi10hc6h10tqqur2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='projectdata' name='textscan.00ox8w309vny4g160t7680knsnrv'>
            <connection class='textscan' directory='C:/Users/12409/Desktop/FALL-2019/2STAT515/CLASSES/Week-13-14-FINAL PROJECT/0_Submitted' filename='projectdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.00ox8w309vny4g160t7680knsnrv' name='projectdata.csv' table='[projectdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='State_FIPS_Code' ordinal='0' />
            <column datatype='integer' name='County_FIPS_Code' ordinal='1' />
            <column datatype='string' name='CHSI_County_Name' ordinal='2' />
            <column datatype='string' name='CHSI_State_Name' ordinal='3' />
            <column datatype='string' name='CHSI_State_Abbr' ordinal='4' />
            <column datatype='integer' name='Strata_ID_Number' ordinal='5' />
            <column datatype='string' name='Strata_Determining_Factors' ordinal='6' />
            <column datatype='integer' name='Number_Counties' ordinal='7' />
            <column datatype='integer' name='Population_Size' ordinal='8' />
            <column datatype='integer' name='Population_Density' ordinal='9' />
            <column datatype='real' name='ALE' ordinal='10' />
            <column datatype='real' name='All_Death' ordinal='11' />
            <column datatype='real' name='Health_Status' ordinal='12' />
            <column datatype='real' name='Unhealthy_Days' ordinal='13' />
            <column datatype='real' name='Poverty' ordinal='14' />
            <column datatype='real' name='Age_19_Under' ordinal='15' />
            <column datatype='real' name='Age_19_64' ordinal='16' />
            <column datatype='real' name='Age_65_84' ordinal='17' />
            <column datatype='real' name='Age_85_and_Over' ordinal='18' />
            <column datatype='real' name='White' ordinal='19' />
            <column datatype='real' name='Black' ordinal='20' />
            <column datatype='real' name='Native_American' ordinal='21' />
            <column datatype='real' name='Asian' ordinal='22' />
            <column datatype='real' name='Hispanic' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_FIPS_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State_FIPS_Code]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>State_FIPS_Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County_FIPS_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[County_FIPS_Code]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>County_FIPS_Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHSI_County_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CHSI_County_Name]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>CHSI_County_Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHSI_State_Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CHSI_State_Name]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>CHSI_State_Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHSI_State_Abbr</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CHSI_State_Abbr]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>CHSI_State_Abbr</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Strata_ID_Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Strata_ID_Number]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Strata_ID_Number</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Strata_Determining_Factors</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Strata_Determining_Factors]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Strata_Determining_Factors</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Counties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number_Counties]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Number_Counties</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population_Size]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Population_Size</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Density</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population_Density]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Population_Density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ALE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ALE]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>ALE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>All_Death</remote-name>
            <remote-type>5</remote-type>
            <local-name>[All_Death]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>All_Death</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health_Status</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health_Status]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Health_Status</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unhealthy_Days</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unhealthy_Days]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Unhealthy_Days</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Poverty]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Poverty</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_19_Under</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_19_Under]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_19_Under</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_19_64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_19_64]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_19_64</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_65_84</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_65_84]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_65_84</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age_85_and_Over</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age_85_and_Over]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Age_85_and_Over</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>White</remote-name>
            <remote-type>5</remote-type>
            <local-name>[White]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>White</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Black</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Black]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Black</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Native_American</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Native_American]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Native_American</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asian</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Asian]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Asian</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hispanic</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hispanic]</local-name>
            <parent-name>[projectdata.csv]</parent-name>
            <remote-alias>Hispanic</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
      <column caption='Age 19 64' datatype='real' name='[Age_19_64]' role='measure' type='quantitative' />
      <column caption='Age 19 Under' datatype='real' name='[Age_19_Under]' role='measure' type='quantitative' />
      <column caption='Age 65 84' datatype='real' name='[Age_65_84]' role='measure' type='quantitative' />
      <column caption='Age 85 and Over' datatype='real' name='[Age_85_and_Over]' role='measure' type='quantitative' />
      <column caption='All Death' datatype='real' name='[All_Death]' role='measure' type='quantitative' />
      <column caption='CHSI County Name' datatype='string' name='[CHSI_County_Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='CHSI State Abbr' datatype='string' name='[CHSI_State_Abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='CHSI State Name' datatype='string' name='[CHSI_State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='County FIPS Code' datatype='integer' name='[County_FIPS_Code]' role='dimension' type='ordinal' />
      <column caption='Health Status' datatype='real' name='[Health_Status]' role='measure' type='quantitative' />
      <column caption='Native American' datatype='real' name='[Native_American]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Number Counties' datatype='integer' name='[Number_Counties]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='integer' name='[Population_Density]' role='measure' type='quantitative' />
      <column caption='Population Size' datatype='integer' name='[Population_Size]' role='measure' type='quantitative' />
      <column caption='State FIPS Code' datatype='integer' name='[State_FIPS_Code]' role='dimension' type='ordinal' />
      <column caption='Strata Determining Factors' datatype='string' name='[Strata_Determining_Factors]' role='dimension' type='nominal' />
      <column caption='Strata ID Number' datatype='integer' name='[Strata_ID_Number]' role='dimension' type='ordinal' />
      <column caption='Unhealthy Days' datatype='real' name='[Unhealthy_Days]' role='measure' type='quantitative' />
      <column-instance column='[CHSI_County_Name]' derivation='None' name='[none:CHSI_County_Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[CHSI_State_Abbr]' derivation='None' name='[none:CHSI_State_Abbr:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.379786' measure-ordering='alphabetic' measure-percentage='0.620214' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CHSI_County_Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andrew&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ashley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bayfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botetourt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Buchanan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cache&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cape May&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cavalier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chaves&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chouteau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clermont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coweta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;De Kalb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dickey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;El Dorado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Franklin City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gladwin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gratiot&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gulf&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haralson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haywood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hoke&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iroquois&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jewell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Keith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kit Carson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Le Flore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberty&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lucas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manassas City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McCreary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mecosta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Muscogee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Okaloosa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Otoe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pasquotank&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Person&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Plaquemines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poweshiek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Arriba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rockwall&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sanilac&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scotts Bluff&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shiawassee&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spencer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Mary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stokes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thurston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trempealeau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Virginia Beach City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Carroll&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abbeville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accomack&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arapahoe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baldwin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blackford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bowman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burleigh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Camden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colbert&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danville City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dougherty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ector&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Emmons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Finney&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;George&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Graham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gregg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hampden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indian River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isle of Wight&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kimball&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Larimer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lenoir&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Alamos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manitowoc&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matagorda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McLennan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Metcalfe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Natrona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nez Perce&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Obion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pender&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pinellas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Porter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Joaquin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saunders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shawano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shenandoah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Johns&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sumter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tooele&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tuscola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Walworth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wayne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Whitley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wolfe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adair&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Appomattox&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Avoyelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bennington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bleckley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boyle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broome&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Candler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Catawba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Charlton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clear Creek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colleton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cortland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuming&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dawes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeSoto&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Edmonson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Essex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fauquier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gadsden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Giles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Traverse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grundy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hancock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haskell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillsdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hudson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iosco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jennings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kaufman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kingman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Labette&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lauderdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Levy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Loudoun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mayes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McPherson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Muhlenberg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neosho&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niobrara&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ogemaw&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Osage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pitt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pittsylvania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queen Anne&apos;s&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rockcastle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sanders&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Schuylkill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Snyder&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stafford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sussex&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Teton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Towner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ulster&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Volusia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washakie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Webster&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilkes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woods&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Atchison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barber&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beauregard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bernalillo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brazos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bucks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Centre&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chemung&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Citrus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coahoma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Comanche&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Craighead&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dane&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drew&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dutchess&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Foster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gasconade&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goochland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grayson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haakon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hardy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Huron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Klickitat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lamar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leavenworth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Linn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lycoming&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marinette&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McDowell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mendocino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Middlesex&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montrose&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Musselshell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New London&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ouachita&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pawnee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pocahontas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prentiss&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Randall&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rooks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saluda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sedgwick&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Simpson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. Bernard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stanislaus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stutsman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tippah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trumbull&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Van Zandt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wakulla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washita&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wetzel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Windham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wise&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alachua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Androscoggin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ashtabula&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baltimore City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beadle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bon Homme&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brantley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bristol City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Caddo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carbon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cayuga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cheatham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbiana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cowley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;De Soto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DuPage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fall River&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frederick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hardee&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holmes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hunterdon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jo Daviess&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kendall&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kitsap&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lafourche&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Licking&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lumpkin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marathon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Martinsville City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montezuma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hanover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nye&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Okanogan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Otsego&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pitkin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Platte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prince William&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rabun&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ripley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roger Mills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sanpete&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Screven&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shoshone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spink&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Mary&apos;s&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Talbot&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tift&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trigg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wagoner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Warren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Westchester&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyandotte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armstrong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Baker&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Blount&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bracken&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broward&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cannon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Catoosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chase&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clearfield&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Collier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coryell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Currituck&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dawson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Deuel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Duchesne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Edmunds&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Etowah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Floyd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gage&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gillespie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Granite&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guadalupe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hinds&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jerauld&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Louisa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malheur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McClain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meade&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mifflin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monongalia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Multnomah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Neshoba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Noble&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ogle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Osceola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Parke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Perkins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portsmouth City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rockdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sandoval&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scioto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Landry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Louis City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Staunton City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suwannee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Traill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Umatilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wabash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Warrick&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Weld&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wilkinson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodward&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allegheny&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Appling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Audubon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belknap&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bingham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bourbon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bureau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Calvert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cascade&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chesterfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dent&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Door&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eaton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emery&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ferry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Imperial&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jeff Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kewaunee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kossuth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lapeer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lemhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lonoke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McCurtain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McKinley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Merrimack&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morrill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nueces&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Onondaga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ozaukee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pemiscot&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pinal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rosebud&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rowan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salem City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sarpy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sharp&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Socorro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. James&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Summit&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tattnall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tom Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vermillion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walthall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Waupaca&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Whiteside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Winston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yazoo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Acadia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albemarle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bartholomew&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ben Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bladen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Box Butte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brooke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cassia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlevoix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chickasaw&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clatsop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coosa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cullman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daviess&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dickenson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eddy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flagler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frontier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gregory&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hampshire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Highlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Howard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;James City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;King&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;La Plata&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Larue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Magoffin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McDonald&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Navajo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niagara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ocean&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Page&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pendleton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Potter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pushmataha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Robeson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rutherford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Miguel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sawyer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shawnee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Smyth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Joseph&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunflower&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Telfair&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toole&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wapello&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Weakley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Whitman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yellowstone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alcorn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Attala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barnwell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beckham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bienville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brevard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bulloch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Calloway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carteret&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottesville City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clare&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coconino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Converse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crisp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dona Ana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Baton Rouge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fayette&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gosper&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greene&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harrisonburg City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Horry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ida&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Izard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kerr&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kootenai&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leflore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mackinac&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McKean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Missaukee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morehouse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Napa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newberry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newport News City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Owyhee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pearl River&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pike&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pondera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prince George&apos;s&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapides&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rockingham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saratoga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seward&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Skamania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Francis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sullivan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tarrant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuolumne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ventura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallowa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Winneshiek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yankton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amite&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ashe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baxter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cabarrus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canyon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Catron&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chatham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chittenden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Collin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Curry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Day&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dewey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dukes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edwards&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Evangeline&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fluvanna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gallatin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilmer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harnett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hawkins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hitchcock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Humboldt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iredell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jerome&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kingsbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lackawanna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lewis and Clark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lowndes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lynchburg City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McCook&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meagher&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Millard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ness&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oglethorpe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pottawattamie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Powell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Powhatan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ross&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sagadahoc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sandusky&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spalding&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. Lucie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suffolk City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thayer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Transylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wasatch&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wells&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Will&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ziebach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbour&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaver&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Berrien&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bossier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Breathitt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Buena Vista&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caroline&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cerro Gordo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chenango&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clackamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cobb&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Craven&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deer Lodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Divide&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Duval&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fountain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gaston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gooding&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Habersham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hertford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hood River&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hutchinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josephine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Knott&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lamoille&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Litchfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lyman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McDuffie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Menifee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mingo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nacogdoches&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Madrid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Okmulgee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Outagamie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Payette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poinsett&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Randolph&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Richmond City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sampson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seminole&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sioux&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. Charles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sublette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taney&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tippecanoe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waldo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washoe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wythe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Allegany&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antelope&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barnes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beaverhead&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bexar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Branch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Breckinridge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Calhoun&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chaffee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cherokee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Claiborne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cochise&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Conecuh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crawford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Defiance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dixon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dyer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elliott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faulkner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Galveston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Geary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gordon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hampton City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hettinger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Houghton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Juab&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Keokuk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Knox&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaMoure&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Letcher&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Little River&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manatee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marlboro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McHenry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Menominee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minidoka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nowata&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oktibbeha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Overton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Payne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pickens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pointe Coupee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Racine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rankin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sequoyah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Siskiyou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Clair&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stanly&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tangipahoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tipton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tulare&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanderburgh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washtenaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Whatcom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Winn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yalobusha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alexander&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Appanoose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Audrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barren&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benzie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Big Horn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boundary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buncombe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Calumet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chariton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clarendon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Codington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crittenden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darlington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Delta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Doniphan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Feliciana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Emanuel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fergus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garrett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenup&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hamblen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henrico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hot Spring&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kershaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosciusko&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Langlade&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lehigh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Long&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macomb&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McKenzie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Merrick&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nash&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norfolk City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oneida&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pembina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pima&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pontotoc&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ralls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ravalli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roscommon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Routt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sargent&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shannon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Francois&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Starke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Summers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tolland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vermilion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walsh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;White Pine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yavapai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Allamakee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aroostook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Auglaize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Black Hawk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadwater&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cambria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Casey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charles Mix&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clarion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coffey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cross&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Culpeper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emmet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gentry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grafton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamlin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Harrison&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hickman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hopewell City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jasper&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kanawha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kidder&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lenawee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macoupin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Natchitoches&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nottoway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Onslow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pacific&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pend Oreille&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Red Willow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roberts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rusk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sauk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Snohomish&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. John the Baptist&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ste. Genevieve&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sumner&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tompkins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tuscarawas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Walton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waushara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whitfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yadkin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alamance&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Angelina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asotin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bear Lake&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bonner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Braxton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Calaveras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caribou&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cecil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cheboygan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Churchill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cowlitz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;De Witt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dickson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duplin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elbert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fallon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forsyth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fredericksburg City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Glynn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gray&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guthrie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hardeman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Holt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntingdon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isabella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kennebec&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kittitas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lagrange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Limestone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maricopa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mathews&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moody&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muskingum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Okeechobee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pettis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pleasants&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prairie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pulaski&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saline&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Searcy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Tammany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Story&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Talladega&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tillamook&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tripp&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Valley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wahkiakum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washburn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aiken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bradley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brule&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cabell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cattaraugus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chautauqua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Choctaw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cleburne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colquitt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Custer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;De Baca&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dunklin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Effingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fleming&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fond du Lac&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glacier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Granville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guilford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hanson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hockley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Humphreys&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iron&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jessamine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kearny&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiowa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laclede&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McCracken&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meigs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montcalm&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muscatine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nodaway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Otero&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pershing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Placer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prince Edward&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rockland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sangamon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shasta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sherman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stoddard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweetwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tazewell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Upshur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wabaunsee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wasco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Baton Rouge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Worth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alexandria City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allegan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ascension&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autauga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benewah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blaine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Box Elder&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brookings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burnet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Caswell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cherry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Copiah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Davidson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deschutes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dinwiddie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Edgecombe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flathead&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fulton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gibson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Howell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ingham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kankakee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;King William&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Leslie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Loudon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mahaska&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maui&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McMinn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Miami-Dade&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moniteau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mountrail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicholas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oconee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Orangeburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Patrick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Piscataquis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Posey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Putnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rensselaer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rutland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Patricio&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solano&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stephens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Surry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Teller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toombs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uinta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vilas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ward&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Webb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yolo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alcona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antrim&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Atoka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barnstable&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bibb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bottineau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bremer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bullitt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Callaway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chambers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clallam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cocke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Contra Costa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Creek&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeKalb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Garfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Geauga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Goshen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenbrier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hanover&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Herkimer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hopkins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iberville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Itawamba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Judith Basin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kern&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leelanau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Livingston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McIntosh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Merced&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minnehaha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mora&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Kent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nuckolls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oldham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Owen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pierce&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ransom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roanoke City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sevier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Skagit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Croix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stanton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweet Grass&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tishomingo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Watauga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wheatland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Winnebago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yamhill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anne Arundel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Assumption&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bannock&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beaufort&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Berkshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bonneville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brazoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buckingham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Calcasieu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chelan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cibola&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cloud&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Craig&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elk&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fannin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Bend&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garvin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grays Harbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gwinnett&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hardin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hendricks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Huntington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Klamath&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luzerne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mecklenburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Miner&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newaygo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northumberland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Okfuskee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paulding&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phelps&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pratt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Radford City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ringgold&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rolette&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salt Lake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sebastian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Silver Bow&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Lawrence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steuben&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Strafford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallapoosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tioga&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Troup&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Van Buren&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wake&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Westmoreland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Winchester City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Avery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bartow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Blair&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Catahoula&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheshire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chilton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clayton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colfax&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cumberland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Davison&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Desha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Edgefield&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Furnas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gila&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Isle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Griggs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harlan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harvey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hillsborough&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ionia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jefferson Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kauai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kingfisher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Salle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latimer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Love&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mahoning&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maury&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McNairy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mineral&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monmouth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nemaha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oconto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orleans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Penobscot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Petersburg City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pottawatomie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rock Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sabine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sanborn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Schoharie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Somerset&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spotsylvania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Susquehanna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Terrebonne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uintah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ware&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Weber&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wicomico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodford&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CHSI_State_Abbr:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='ALE count per Health Status'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Semibold'>Total ALE count in each Health Status</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata' name='federated.0tav64j0kajwsi10hc6h10tqqur2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2'>
            <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
            <column caption='Health Status' datatype='real' name='[Health_Status]' role='measure' type='quantitative' />
            <column-instance column='[ALE]' derivation='Count' name='[cnt:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health_Status]' derivation='None' name='[none:Health_Status:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2].[cnt:ALE:qk]</rows>
        <cols>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:Health_Status:qk]</cols>
      </table>
      <simple-id uuid='{19727DCE-4D7F-4B8F-9B3C-4AD9B2FE49C2}' />
    </worksheet>
    <worksheet name='ALE for VA'>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata' name='federated.0tav64j0kajwsi10hc6h10tqqur2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2'>
            <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
            <column caption='CHSI County Name' datatype='string' name='[CHSI_County_Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='CHSI State Abbr' datatype='string' name='[CHSI_State_Abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ALE]' derivation='None' name='[none:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CHSI_County_Name]' derivation='None' name='[none:CHSI_County_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[CHSI_State_Abbr]' derivation='None' name='[none:CHSI_State_Abbr:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]'>
            <groupfilter function='member' level='[none:CHSI_State_Abbr:nk]' member='&quot;VA&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_County_Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]</rows>
        <cols>([federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk] / [federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_County_Name:nk])</cols>
      </table>
      <simple-id uuid='{D123A9BE-2780-4B1F-89E2-683C06BE63E0}' />
    </worksheet>
    <worksheet name='ALE for VA - ascending order'>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata' name='federated.0tav64j0kajwsi10hc6h10tqqur2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2'>
            <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
            <column caption='CHSI County Name' datatype='string' name='[CHSI_County_Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='CHSI State Abbr' datatype='string' name='[CHSI_State_Abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ALE]' derivation='Avg' name='[avg:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CHSI_County_Name]' derivation='None' name='[none:CHSI_County_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[CHSI_State_Abbr]' derivation='None' name='[none:CHSI_State_Abbr:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_County_Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Petersburg City&quot;</bucket>
              <bucket>&quot;Richmond City&quot;</bucket>
              <bucket>&quot;Danville City&quot;</bucket>
              <bucket>&quot;Portsmouth City&quot;</bucket>
              <bucket>&quot;Hopewell City&quot;</bucket>
              <bucket>&quot;Lee&quot;</bucket>
              <bucket>&quot;Norfolk City&quot;</bucket>
              <bucket>&quot;Wise&quot;</bucket>
              <bucket>&quot;Roanoke City&quot;</bucket>
              <bucket>&quot;Brunswick&quot;</bucket>
              <bucket>&quot;Nottoway&quot;</bucket>
              <bucket>&quot;Mecklenburg&quot;</bucket>
              <bucket>&quot;Dickenson&quot;</bucket>
              <bucket>&quot;Russell&quot;</bucket>
              <bucket>&quot;Halifax&quot;</bucket>
              <bucket>&quot;Suffolk City&quot;</bucket>
              <bucket>&quot;Franklin City&quot;</bucket>
              <bucket>&quot;Southampton&quot;</bucket>
              <bucket>&quot;Caroline&quot;</bucket>
              <bucket>&quot;Henry&quot;</bucket>
              <bucket>&quot;Martinsville City&quot;</bucket>
              <bucket>&quot;Newport News City&quot;</bucket>
              <bucket>&quot;Tazewell&quot;</bucket>
              <bucket>&quot;Charlotte&quot;</bucket>
              <bucket>&quot;Accomack&quot;</bucket>
              <bucket>&quot;Northampton&quot;</bucket>
              <bucket>&quot;Lynchburg City&quot;</bucket>
              <bucket>&quot;Smyth&quot;</bucket>
              <bucket>&quot;Pulaski&quot;</bucket>
              <bucket>&quot;Radford City&quot;</bucket>
              <bucket>&quot;Winchester City&quot;</bucket>
              <bucket>&quot;Buckingham&quot;</bucket>
              <bucket>&quot;Prince Edward&quot;</bucket>
              <bucket>&quot;Scott&quot;</bucket>
              <bucket>&quot;Wythe&quot;</bucket>
              <bucket>&quot;Hampton City&quot;</bucket>
              <bucket>&quot;Richmond&quot;</bucket>
              <bucket>&quot;Bristol City&quot;</bucket>
              <bucket>&quot;Dinwiddie&quot;</bucket>
              <bucket>&quot;Goochland&quot;</bucket>
              <bucket>&quot;Louisa&quot;</bucket>
              <bucket>&quot;Warren&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;Appomattox&quot;</bucket>
              <bucket>&quot;Chesapeake City&quot;</bucket>
              <bucket>&quot;Nelson&quot;</bucket>
              <bucket>&quot;Pittsylvania&quot;</bucket>
              <bucket>&quot;Isle of Wight&quot;</bucket>
              <bucket>&quot;Orange&quot;</bucket>
              <bucket>&quot;Culpeper&quot;</bucket>
              <bucket>&quot;King William&quot;</bucket>
              <bucket>&quot;Middlesex&quot;</bucket>
              <bucket>&quot;Floyd&quot;</bucket>
              <bucket>&quot;Patrick&quot;</bucket>
              <bucket>&quot;Fredericksburg City&quot;</bucket>
              <bucket>&quot;Gloucester&quot;</bucket>
              <bucket>&quot;Mathews&quot;</bucket>
              <bucket>&quot;Spotsylvania&quot;</bucket>
              <bucket>&quot;Amherst&quot;</bucket>
              <bucket>&quot;Campbell&quot;</bucket>
              <bucket>&quot;Franklin&quot;</bucket>
              <bucket>&quot;Powhatan&quot;</bucket>
              <bucket>&quot;Staunton City&quot;</bucket>
              <bucket>&quot;Harrisonburg City&quot;</bucket>
              <bucket>&quot;Page&quot;</bucket>
              <bucket>&quot;Henrico&quot;</bucket>
              <bucket>&quot;New Kent&quot;</bucket>
              <bucket>&quot;Fluvanna&quot;</bucket>
              <bucket>&quot;Shenandoah&quot;</bucket>
              <bucket>&quot;Carroll&quot;</bucket>
              <bucket>&quot;Madison&quot;</bucket>
              <bucket>&quot;Augusta&quot;</bucket>
              <bucket>&quot;Hanover&quot;</bucket>
              <bucket>&quot;Manassas City&quot;</bucket>
              <bucket>&quot;Prince William&quot;</bucket>
              <bucket>&quot;Bedford&quot;</bucket>
              <bucket>&quot;Chesterfield&quot;</bucket>
              <bucket>&quot;Fauquier&quot;</bucket>
              <bucket>&quot;Prince George&quot;</bucket>
              <bucket>&quot;Frederick&quot;</bucket>
              <bucket>&quot;Botetourt&quot;</bucket>
              <bucket>&quot;Montgomery&quot;</bucket>
              <bucket>&quot;Virginia Beach City&quot;</bucket>
              <bucket>&quot;Roanoke&quot;</bucket>
              <bucket>&quot;Salem City&quot;</bucket>
              <bucket>&quot;Albemarle&quot;</bucket>
              <bucket>&quot;Alexandria City&quot;</bucket>
              <bucket>&quot;Charlottesville City&quot;</bucket>
              <bucket>&quot;Stafford&quot;</bucket>
              <bucket>&quot;York&quot;</bucket>
              <bucket>&quot;Loudoun&quot;</bucket>
              <bucket>&quot;Rockingham&quot;</bucket>
              <bucket>&quot;James City&quot;</bucket>
              <bucket>&quot;Arlington&quot;</bucket>
              <bucket>&quot;Fairfax&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]'>
            <groupfilter function='member' level='[none:CHSI_State_Abbr:nk]' member='&quot;VA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[avg:ALE:qk]' field-type='quantitative' major-origin='60.0' major-spacing='2.0' max='84.945000000000007' min='65.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2].[avg:ALE:qk]</rows>
        <cols>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_County_Name:nk]</cols>
      </table>
      <simple-id uuid='{95A7B0BF-D37E-49F7-A3A2-53744158BC88}' />
    </worksheet>
    <worksheet name='ALE vs Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata' name='federated.0tav64j0kajwsi10hc6h10tqqur2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2'>
            <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
            <column caption='All Death' datatype='real' name='[All_Death]' role='measure' type='quantitative' />
            <column-instance column='[ALE]' derivation='None' name='[none:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[All_Death]' derivation='None' name='[none:All_Death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:All_Death:qk]</rows>
        <cols>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]</cols>
      </table>
      <simple-id uuid='{85AE4390-54C1-4A6C-82F6-6ECC389905A4}' />
    </worksheet>
    <worksheet name='ALE- VA'>
      <layout-options>
        <title>
          <formatted-text>
            <run>ALE - VA</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata (3)' name='federated.0tav64j0kajwsi10hc6h10tqqur2 (copy 2)' />
          </datasources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2 (copy 2)'>
            <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
            <column caption='CHSI County Name' datatype='string' name='[CHSI_County_Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[ALE]' derivation='Avg' name='[avg:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ALE]' derivation='None' name='[none:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CHSI_County_Name]' derivation='None' name='[none:CHSI_County_Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tav64j0kajwsi10hc6h10tqqur2 (copy 2)].[none:ALE:qk]' field-type='quantitative' major-origin='0.0' major-spacing='2.0' max='90.0' min='60.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0tav64j0kajwsi10hc6h10tqqur2 (copy 2)].[avg:ALE:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2 (copy 2)].[none:ALE:qk]</rows>
        <cols>[federated.0tav64j0kajwsi10hc6h10tqqur2 (copy 2)].[none:CHSI_County_Name:nk]</cols>
      </table>
      <simple-id uuid='{23DE2049-1D42-4201-B8BE-4FDCC0B04997}' />
    </worksheet>
    <worksheet name='Avg ALE per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata' name='federated.0tav64j0kajwsi10hc6h10tqqur2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2'>
            <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
            <column caption='CHSI State Abbr' datatype='string' name='[CHSI_State_Abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ALE]' derivation='Avg' name='[avg:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CHSI_State_Abbr]' derivation='None' name='[none:CHSI_State_Abbr:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[Longitude (generated)]' field-type='quantitative' max='-7301246.5722074136' min='-18634237.272954512' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[Latitude (generated)]' field-type='quantitative' max='9086104.1290663183' min='1766447.5230492826' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[avg:ALE:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]' />
              <color column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[avg:ALE:qk]' />
              <geometry column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2].[Latitude (generated)]</rows>
        <cols>[federated.0tav64j0kajwsi10hc6h10tqqur2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{731B4E6E-B63E-4BA4-84D9-17D2B1FFEC10}' />
    </worksheet>
    <worksheet name='Boxplot-ALE (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Boxplot for ALE </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata' name='federated.0tav64j0kajwsi10hc6h10tqqur2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2'>
            <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
            <column caption='CHSI State Abbr' datatype='string' name='[CHSI_State_Abbr]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[ALE]' derivation='None' name='[none:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CHSI_State_Abbr]' derivation='None' name='[none:CHSI_State_Abbr:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='vertical-align' data-class='subtotal' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]' value='bottom' />
            <format attr='text-align' data-class='subtotal' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]' value='center' />
            <format attr='wrap' data-class='subtotal' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]' value='on' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]' />
              <lod column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]</rows>
        <cols>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]</cols>
      </table>
      <simple-id uuid='{8A4553E3-D09E-4FD5-9DBB-774497E5A742}' />
    </worksheet>
    <worksheet name='County wise ALE'>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata' name='federated.0tav64j0kajwsi10hc6h10tqqur2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2'>
            <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
            <column caption='CHSI County Name' datatype='string' name='[CHSI_County_Name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[ALE]' derivation='None' name='[none:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CHSI_County_Name]' derivation='None' name='[none:CHSI_County_Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[Longitude (generated)]' field-type='quantitative' max='-6698842.6145260567' min='-17530631.195342321' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[Latitude (generated)]' field-type='quantitative' max='8620813.1227494478' min='1624868.7216546102' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_County_Name:nk]' />
              <color column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2].[Latitude (generated)]</rows>
        <cols>[federated.0tav64j0kajwsi10hc6h10tqqur2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D5935D90-CD58-4AA5-A267-CB22FE0C32A7}' />
    </worksheet>
    <worksheet name='Health status variation per ALE &amp; All_Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Semibold'>Health Status variation with ALE and All_death </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata' name='federated.0tav64j0kajwsi10hc6h10tqqur2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2'>
            <column aggregation='Avg' datatype='real' name='[ALE]' role='measure' type='quantitative' />
            <column caption='All Death' datatype='real' name='[All_Death]' role='measure' type='quantitative' />
            <column caption='Health Status' datatype='real' name='[Health_Status]' role='measure' type='quantitative' />
            <column-instance column='[All_Death]' derivation='None' name='[none:All_Death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ALE]' derivation='Sum' name='[sum:ALE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health_Status]' derivation='Sum' name='[sum:Health_Status:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[sum:ALE:qk]' field-type='quantitative' major-origin='0.0' major-spacing='2.0' max='86.052318840579701' min='65.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:All_Death:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:All_Death:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2].[sum:ALE:qk]</rows>
        <cols>[federated.0tav64j0kajwsi10hc6h10tqqur2].[sum:Health_Status:qk]</cols>
      </table>
      <simple-id uuid='{4D3E2FE7-66FB-43B0-95C9-167E6A4CA184}' />
    </worksheet>
    <worksheet name='Health status vs Unhelath days'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Semibold'>Helath Status vs Unhealthy Days </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='projectdata' name='federated.0tav64j0kajwsi10hc6h10tqqur2' />
          </datasources>
          <datasource-dependencies datasource='federated.0tav64j0kajwsi10hc6h10tqqur2'>
            <column caption='Health Status' datatype='real' name='[Health_Status]' role='measure' type='quantitative' />
            <column caption='Unhealthy Days' datatype='real' name='[Unhealthy_Days]' role='measure' type='quantitative' />
            <column-instance column='[Health_Status]' derivation='Sum' name='[sum:Health_Status:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unhealthy_Days]' derivation='Sum' name='[sum:Unhealthy_Days:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0tav64j0kajwsi10hc6h10tqqur2].[sum:Health_Status:qk]</rows>
        <cols>[federated.0tav64j0kajwsi10hc6h10tqqur2].[sum:Unhealthy_Days:qk]</cols>
      </table>
      <simple-id uuid='{C784084F-12CC-4634-ADB5-733544B3BF63}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='106'>
    <window class='worksheet' name='ALE- VA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tav64j0kajwsi10hc6h10tqqur2 (copy 2)].[avg:ALE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0tav64j0kajwsi10hc6h10tqqur2 (copy 2)].[none:CHSI_County_Name:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{61DD3F37-302A-4508-941F-4C3EC1ED9500}' />
    </window>
    <window class='worksheet' name='ALE for VA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_County_Name:nk]</field>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{0E1B310B-B7D0-464A-A632-1416E447F502}' />
    </window>
    <window class='worksheet' name='ALE for VA - ascending order'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0tav64j0kajwsi10hc6h10tqqur2].[avg:ALE:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_County_Name:nk]</field>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{40B93726-8C72-49BB-A32A-93151F62F64D}' />
    </window>
    <window class='worksheet' maximized='true' name='Health status variation per ALE &amp; All_Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:All_Death:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:All_Death:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5898D326-1EF4-4935-BE70-CF24199D0D61}' />
    </window>
    <window class='worksheet' name='Health status vs Unhelath days'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9E08D31A-3A6D-4AD2-A069-C753DCEF5BFC}' />
    </window>
    <window class='worksheet' name='ALE count per Health Status'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F5EFF69B-686D-497D-AE46-A90E8B52A9B6}' />
    </window>
    <window class='worksheet' name='County wise ALE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]</field>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_County_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{25C19356-E40E-4C55-AC2F-750A298EB081}' />
    </window>
    <window class='worksheet' name='Boxplot-ALE (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]</field>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D9CCC92-E2F1-44C7-8454-6D80939471E1}' />
    </window>
    <window class='worksheet' name='Avg ALE per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0tav64j0kajwsi10hc6h10tqqur2].[avg:ALE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[avg:ALE:qk]</field>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:CHSI_State_Abbr:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D9DAD84-A4DF-43C9-BCFA-826DB85E4D5C}' />
    </window>
    <window class='worksheet' name='ALE vs Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:ALE:qk]</field>
            <field>[federated.0tav64j0kajwsi10hc6h10tqqur2].[none:All_Death:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6FC217DC-CACB-499F-9231-9A5E67A148B3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ALE count per Health Status' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ALE for VA' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ALE for VA - ascending order' width='192'>
      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
      bfyL//w9VveSZ+V/5afGeWOym1/6tT869/t//Xe+yMJmlN/61uOzsv52H194qZ9v/miFpe34
      WfnPfWWazz/sq+lTFQHo7H3wfVKxJMcri0z89M9e8hQFzcafvr9x7s071d9KT5uXb/5w5Vy9
      r702xDuL+/zmNz84Kxto9/GNv/810rnSORuFkoKm6+fKADRNr7v/VbpAOrl4FGQHVpcbdzBY
      9/9Y0Hj++W99j9W9j7q3f/WtCd6c6uYf/sofnqv3y3/vS3ywcsh/+eO5s7LeNi//7G9+nm+9
      vcrSzkdv3p//yjQhn5P//Ecz52x89l73DZ3F9agyCDYx+pW/jK5WSGytsDf/mJHXX79l1wRX
      JV+s8L9/uHyu7C+8NsxePMPj1cOzMl+Lna+8MkgmXyKVLZ6VF8unb96Pl8Hpm7dUVs6VB3KO
      GzqL28VwWxTJZCE4MEFwoHqdD5PhdE2ibeoesloisX9MsPtuKv5Fo6yolCsfbTMpyxJOm4VC
      qYL6sS6B1WwiX6rwO9+ePff7n5zuYXEreq58oMPPV14ZvHnnXwCuvS+QM9SBM9jG1vvvIAPR
      5QXSmbIQgAHbR2mKZeXsOOR14nZa2ThInavX1+7j//5ohd/85qOzsoEOP9/4ha/yT3/zO891
      Pd66xKBPcJ667FlYiG1jD/dSSR2iO4LYSkdoqsrh0nxT7w36wcoh35vZOTtu9Tn561+c5N/9
      3tss737U9/7ZL03xufs9/JN/fz5m/au/+DU0TTtXpus6iqKg6+cHhJqmoSoKz6Kq6s3Y4KkN
      LrChPr8xsqKqaNr5ch2q+3GRDeV5P7iijWfPpS4CiO0c0vHgNbJ7Kyi5AsndbcLD002/N+h+
      PMv3Hm+dHQ90+Pn5r95/LjlQlmXMpuevkclkQpbPZ6tIkoTZbL7QhumC63xjNnhqgwtsXJD9
      azaZkOXz5RJU9+MiG+bn/eCKNp49lzo8mRqBvmFMsoS3ewQvOr6ObhyuT+feoL/z7Rn249mz
      489N9zDeF+bX/+C9c/X+1l8UHwx/EajL3qCuwMfDpBIuf+D6ZhvMdz7Y5Pf/fOnsuCvs4Zf+
      2hs8Wj1i+WN97/42H4MdAb4/s33u9z/35Xu35qvgk9OcfZOPUSwr/NkzD+9np7pJ5Yqs7yer
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ALE vs Death' width='192'>
      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
      bDZLNptFURSCwSCxWGzPBuIexfN+EJrCAC1ggF/GNE0qlQqrq6uUSiUAYrEYyWQSu31nyz22
      wnnvh+ajaoBHeiDsYSNJEoFAAK/X22zUG8ZdB+KCweBjO03DNE1ev7BEsaLQHfNyajTxWHUp
      CwPcI5IkIcsyyWSSZDJ5x0Dc/Pw8AOFwmGQyidPpfGxukmyhjt1q4asvDfLtd+dQdQO79fEx
      uzDADvnlgThN09jY2GBmZoZ6vY7dbieZTBKNRlt6mkbAayedr/H+RApJAqvcuudyN0QbYB80
      TdOk0Wiwvr5ONptFkiSCwSDxeJxAILDnffb7fd4NVSe1WaUr6kHeoZnvpw1gmiZvXFiiUFHo
      jXt59uDdq107+21gPl2kWtcY7QkJAzwITV3XyefzpNNparUaVquVeDxOJBLZk4y4R/W8P8z9
      GCCdr3F1Iccnj3Xx7Xfn+M1n+7Ddpdq1kxgnV/IspstE/U7ylYaoAj0IZFkmEokQiUSQZZlK
      pfKRnIeOjg58Pt9j03bYDcGb1a4zN9JIEsh7WO1KbVYZ7QkSC7j44dkFUQI8aM1f1ruV87C2
      tkapVMJutxOJRIjFYtjt9nsyRCuc9/12g9YVjfXNKh1hDw1Vx+fam/yPhqrzo3OLKJrOJ491
      CQM8aM2P07s1EJfL5chkMiiKgs/nI5lM4vf7t21Mt8J572QcQNF0vvveHB6nDY/TxieOdu55
      jKIK9AghSRIOh4POzk46OzsxTJM3zkzxw7NnGIw76In5iEajxONxnE7nPWnWFY3z0xm6o156
      Yz4exRqWacJytsxCusTJoRhuR/O2XM5W6E/4eXokzjfent6XYz9efVqPGau5Cm63l3/5e69S
      d3Zy7NgxHA4Hk5OTnD17lvHxcbLZLJqmbavxo3OL9MZ8XJnPkcpX7+v4qmZQrqvbPrVN06Rc
      U9H03fVqbZTqXJjO0J/w8aOzC1vvd0c9zKeK/PDsAomQe1fH2A5RAuwhpmmiGyayZW8ScFx2
      K4uZEpW6CpJ0u/coGkO2SFuN6eXlZTRNIxKJfGQgTtEMOsJuVjdclGsq3H0m+Uco11W+/94s
      LocV2SIhWySeHI4T9d8ued69vs5muUGtofGbzx5go1znnatreJ1WPnOyF5v13p6vlbpKxO8k
      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
    </thumbnail>
    <thumbnail height='192' name='ALE- VA' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg ALE per State' width='192'>
      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
      6gtSuBtnuwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Boxplot-ALE (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='County wise ALE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Health status variation per ALE &amp; All_Death' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5Bd133n+Tnnhhf7dQ7IGUQiSAJMICmSIsWgHG3JlmVZtmvtsT3l8tTu
      zv4xU6XZqt2p2a2d8tTOrD0eJ0lWtCiJoiJlMYsEKRJEzhlooHN84aZzzv5x7nvdIJsgiQaI
      JtHfqi40Xt/3u+fdd37n/ML39zvCGGOYxzyuUcirPYB5zONqwr1SgpVSRFFErVablRwpJVrr
      d70MIQRCiFnJkFJijGE2m/ZceBZzScYVU4D64MIwnJUcx3FQSr3rZVwuBZjtFz4XnsVckjFr
      BTiw51WUkWSbu3DjMSYDzeJlK2ltys1W9HsKxhiEEFd7GPN4DWbtA2ilQAiM0Zw8eRphFIma
      3So1j3m8U5i1AgSxZvWq5UxOjNPU2sHGDes5c+LY5RjbPOZxxTFrE6i1uciRYyfp6lqEm0yy
      Z99+Fi5dcTnGNo95XHHMWgFWrt0w7X/t9CyercR5zOOdw3weYB7XNOYVYB7XNOYVYB7XNOYV
      YB7XNOYVYB7XNOYVYB7XNOYVYB7XNOYVYB7XNGanADpm96uvsnPHK0wECUlQ5l+efO4yDW0e
      87jymF0mWIUEStKeh8lazLne4xSKlgVap+3OlgFZpxG/22XU3z9bGfWagNmOYzZ4L8mY1Q4Q
      RxGu5+H4PuPnjnGyb4zB870MjZVnNah5zOOdwqx2AMfPYuKA8QnNotWb2LAxy6FDh+hoKTau
      mW3J8WwroOaKDGPMrFdvY8ysC2LmwrOYSzLElSyKr1QqTExMzErGXKkcuhwyZlvRNV8Rdvll
      zEeB5nFNY14B5nFNY14B5nFNY14B5nFNY14B5nFNY14B5nFNY14B5nFNY14B5nFNY14B5nFN
      Y14B5nFNY14B5nFNY5YKYOjvPcXR46fRWtN39hSHj51EzZ+5MY93CWanAOE4Z4Yi2pwyx8+P
      4uRbaXMqnByoXqbhzWMeVxazokMbN084cZ4DE7Dp5rXEY+c4PqzYuiXfYOk5jjOrAUo5eytt
      rsiYbQGHlHL2BSBz5FnMFRmzUoC4OopX6mZJs+Lc2TMMDg5z0+Z1GG1w04k/W7rqe0nGbOnM
      l6MeAObGs5grMmalAH5TN+uWOlRiwXVtTRQzDiMjI3T1ZHGdef96HnMfs+4OXWrtoJT+vmTp
      0tmKm8c83lFcsTPCLheciVFkWEMXW3CDCiaoErV1440Po7N5pLA7TZwrILTCHxsGrUgKJZzq
      JHFzOzjzxzXNY2bMaQWQ1TLNTz8KxiCXX4cUoAfPEyuFG1Qgm0e2LwBgeM1m8qcOkxvsxSiF
      0TECQdjWzeTN77/Kn2QecxVz2lAXRgMGAVDPLQiB0NMdH2N/jEmvBwQIM13GW4RSyLA2da95
      vOcxp3cAVSgxcddHMEENVWrFCyqYli6EEJT2vIB2PWrNHcRNLcT5JsbX3IB2XHJnjoDjghBE
      7Qve2oQ2htb9v8afGGVy5XqqC5a/4XXe2BDaz6AKpZmvqV83OYZxHJJ8E1wsfJnE+EN9xG1d
      GD/z5mOdx2XDVVUA/9wJZFAlWLYO3iBfkLR2NkJdKpuHlk7yJw8ghMCJIwrH96OyOcTi1WA0
      ymiSQgk3DBACisf2oppaUG3dFx+MMXiVCYTRuOUJMmeOgkoIl66FafHmTP9pmnc/j3E9hu/4
      EDqbn/mzjQ7SuucFEJKhW96PMIbs0HmqXYvQ2cIF15ZefYbsmaNEXYsZu+vDb+MJzmO2uGoK
      4EyOUnrhZ2AMRkrC5evf9D0iiSme2G+PZXV9BAKEQIY1SgdfsT1iohqi0IxwHIzRGJXAW4md
      C8HYui3448PEmRzNrz4DScyYnyFaOHXon6jLMuaiO8uU6WWvK+19EW9yFHe4j7Gb7r7w4nos
      W88+Lj6Pt4erpgDay2D8LCKO0Lnim78ByA72Ujh7FADl+Yg4wQBxczvucB/CGIx00H4GqRLC
      th6qC1eguha9sRIY05h4UamVqKWD4rG9yEwO42cxr1nhgwXLMJ6P8rPoXGEmiQCEbd2MXr8N
      4zioXBGVK+BOjqJmeM/klrsJF60k7lzwlp7DPC4frmpjLBFUEUmMLja/4TXTmx+55XFad/8K
      7XqM3nAXMgpBCJJCEx3PPoYTVImbWhm95X7c6iRxsRmk84YNlGStQq7/DIXTB8GAkg6jt34A
      tzJBy94XiUutjG6+46Iy3iqE1ni1MlGueIFJ9XYw3xjr8su4qj6AyeZ5rfbJsEZmoJeovRuV
      b7rgb0mxmcHbHwIETlDFrYwTtvWQ6T+DSBIr0/UwrocWgkzfacLuJTP6F+7EKG07n0VohTAa
      YwxuWMMf7iNYsJyBuz5sI05hgD/Qi1qwFLxLd1CNlCRNLW/NHJvHO4Y5FwUq7X2RzGAvSbGZ
      4bs+8voLpJ3MLa8+hVstozI5nPK4XVWFIGrrQsQRLS8+jhPWKF+3hfC6m14nxquVka4HeJiw
      BhhwPJqO7MGdGCHqWEDUvoDSy0+SGThL2L2E8Ts/dGU//BWCOzlG9vwpa761tF/t4cwpzDoP
      MD4yyLn+IQAmRocYGB6blTyTTvD6v28EpzIBrodbbIbWTkgbz6pcwYYcUzPDSAdZK9P88pPk
      D+8ElVDcu53Csb1TwrTCaLsXyTikcOIAzTufs76BY9cIf/g8hb3b4e3kFd4B+IO9tLz8BJmB
      s294TenAyxROHaTpwMvv4MjeHZjdDhBNcOjkAIubFMeTmKH+EZrdGm7uRtrylyZ64vrbCRYu
      J27peMNrRBwReVkymRwiX4RsHlOrUF28imDBcmQYUlm3ldLOZyke3Y05fQhZmcQfOIvON5E/
      dchO7EwOozVEoY3aCInK5pHKISm1gZBM3Px+inteIHfqIPkjuwmWrkWV2mYemFY0792OOzHK
      +OY7rIwrjOLRPXjjw8iwRti1eMZr4lIb7sToOzKedxtmXQ8Ql4c4XoZVK/K0dC9iWWaMY8OT
      NGdskuht1wM4DsnC5QjA4fWcb6cyQen5nyKUIly6mmytilExWjqITI6mY3vJnTqMcFzI5BFh
      DaMSjBDE3YtRPUtJTrThTo5hghpGCIzjAgbjuJRveh+qUMJ4GRzHQSYRunMBaugcuB6+TohS
      c+sCaEV2sJdM/1kEhtzQOaqtnRdcciXqAcJFK3FqZaLFq97wWVc3bCVctRGVyc0ZHv5ckTG7
      eoDJQbIdy1nTkXBqSBGpIfq8Ch2LFzW+jMvN+XYmx3HCGgD+wR1orRm/6W7y5Qlye18E6SC8
      DAIbEjVYWoQQEuVnSbSyZLryOGkaASMEIgqJOhYgR4dIpEPiZRBBlZYnv48TVKms20Lu3HFK
      2x9nYuNt1JasuWCMpb3byZ09hnFcwo6FVBYsR7/ms1+JeoDK0rVUlq6tP6g3foZexjrgQswJ
      Hv5ckTG7eoBSD4smT9Nfdtm4biUjA71UVBOdRW9Wg7oYovYeqkvXkjt5ECEkRgrc8jheecKa
      NdLBqBh0gtEqteM9EILc6cO4Y0O4w/0Y10W4dpwyiUFIMoPnyQ73o87kGLr7Y6ANEgOeR/7I
      LoTjWDlH95B4GeKeKfp3PQqVFEqvT3TNY85idj6AEPQsXkZP+t+OnsW8seV+6XDHhynufRGh
      YuLmdiY33Q5akztzhKSlg9qKDeTOncRJEusMa4EJK2mmVoCXmixGImuTCDRobf+slb1OCBBY
      5mlYo3nH0zi1MkJKhPAgSSCOMVLghCM0v/IkcedCZLVC0tyOOzZI0LmQyQ23ApA7vo/suROU
      r9tC3LnwjT9cPaNcN22MueQ8wTzePuZcGHQmZM8cxR8dAGNwR4eordzE5KbbqC27DpVvwiDQ
      joOMAjtZtQJEI2JjjEYgwRicKER4GZTjgpTIMLQ3ERKUjR4Jpcn2n7Gv1yej6xF2LMDvO2Xf
      hyEz2AtK4ZXHLD3DcRFJDEZTOLILGUfkTx5g/CIK4A+cpbTzOeK2bkQc4JYnGLvlfpLX+A/z
      uDJ4Vyw1waKVJIUSBrtSZs4dxxvuJ2lqxbge/mi/zQWoBBPVQMXAtFU9jjBRmK60djeQWtlM
      snTsa2Dfn8SWQ6Q1RitMHGK0Im5uxxkbBJVQW76OqK0blS1YLpPRJPkmnMlR2p76HoWDO4ib
      2y1No9QGSUym9ziy8vqsuD90DplE+INn8UYGkFGAP3z+nXy81zTeFTuAkY6dgJOjCGMoHngF
      I6Cy5kaMlJhc0UZYvIydwCpBTKsfsJNeUiemGbCrtTFWQYRIywoMqORCc8QYTJKQuC7ZoIpw
      fXIn9jO27YM41UlKu35liXS3PUjbk48gjSF/dA+oBCEdCkd24/Wdxh/sJSm2MPrQb+GMDpI5
      dYhg1SZqy9cj44iorRsZhzjl8dc52PO4cnhXKEDp1afxxodR2Tzaz+KNDyGEpHBkJ8QxtZUb
      wc8i/Cz4GZgYJTXoAWFDomCd4lQxRBJPm+jYCIm2BThWadIfbZUke/YYws+mxTlOavJ4lsqh
      FE07n7EypTW1hOOC6yFUgj/Ya++T3q/puR/jjg7iDp5j4sHPMnHj+96pRzmP1+BdoQBJqQ13
      YoRw0Uoqa24kd+oAhcM7EYBGkLR0YkYHLB1aKRpVYlqDM+1o0tfy/oyxE3yaYgDp+9w0o2xs
      7N3IRhgRLIffIIk6FpDpO02m77StXXNce4mfsSqYmk+1jbeRtHdb8l5bF87YMKq1a+YPbAwi
      CjBeZt4hvsJ4dxyTGkc4tQoqZVKKJKbtmUfTovcOxPgITlBF5FLqcj02bKZN5Hr8XKQ7g5n2
      U79Wa0ucm+4XgJ2EWqdO9bTdQdqdgCiwdQdKQUqTNoUSTq1MbcFyopYO4u4lCM+3cXylkJUJ
      y4KdYYLnju2luO9Fwp5lTNz6gWnDmGeDXm4Z74odAOlcUH5oXI+4pROnWsadHIPKBDgOxqSr
      dT0jqtNIkBGYJALhIKRshDsbIcc0H0BQI3UK0hsZa8Y4jvUtwhAhnQY/SKSKYKST/ihkWEUm
      MaI6SVJsJndkF3mliLoWMnH3x61cx0GXWt/w43rDfQil8IfmneErjauiADKokj+yi7ilk3Dx
      qovXy74G3tB5smeP2qiPMRghCJevI9N7HBGHGCHtLpFOUlRq3hjAJKAFRgpEGg2iTk8wNiM8
      tVPI15tM2kaHUArhZzBGU1u8FqMVUdcijJBkzp3ALY/jj/Rbp12btGotINN7HKf/LBhN1LOM
      qGfpjJ+9suEWdCZH1LMMEUfkj+xEZ3KEqzdf4hOfxxvhqphAhX0vUTiyC+O4DD3wOUz2wr49
      IqjS9OtfYrwM1W0PoqaNsPWJR/Bq5XRS28mopIueGMPxUvsbYR3ihqkzzXQhXfXrJo50bEbY
      GHS1bBWizvWpPxrHhSTGpDF+vAx4PpOb7yRYvIrCvpfwh85jpKS8+Q5Uvkhx9/NkT+wHx0NI
      iXZchNYIrTBGoz2f4Y/+/psqf/bkAUo7n8UASUsXEze9D9V86ZTmuWJ6zBUZV2UHiNu60a5H
      0tKB8V5Pm8icO0Gm97i9dtVGyDeh/SyyViZpbsNtKEDaDqU8joNODZfULFGxXeXBTnbPTnKS
      2FKfpUFgQIMx7lRppOeD4yCkM2XXJ7EVm8mmZpbdHZpefoLiiz9HSKdRn9z69A8wroeIQpAu
      IlewO0YUAAbj+hijiV7D3HTGh2l++lGkThCuT3X1ZirrtpA0d6D9LCKs4Q6cJX94J+Ub7sT4
      2Sv6HV0ruDpOsDGIOLIszBkYjDJlfBrPR7oe7sgA2vOQStnJMD5sQ44AGRuaNHVTx/Pt62k8
      XwgJrtvwEQiDhu1vbXinsTOYNHaPa1dtoxVGqylFaow//UfFVjmQ4PtWXj2cagy4PsKzodLY
      cdH5IpO33I8REuP5FzjA2aN7aHrlScjkEFKSFFsYue/TAIgopLD7efy+0zhRDZ3NM3L/b2Ay
      b7/j3VxZeeeKjFntACqqcfjoCSaH++hZewNDZ0+B0azdvIWif5HwnRAX7X+jCyXGHvgsAO0/
      /wbCaGQcIaS0TFDHxQiBdj0crSCl+ZrYkuAgnaNaYxxhdwadmkJpsYyQTmripDuJ1raoXiuE
      Ehgj7crtOFNmSt0v0LFNFwBGSHS5jPTbbIiz1EpSaMYdH8aZGAHHvkctWIbJF3HHh4i6X99D
      NVyyGne4DyeJwPWoLVvX+JvxM5Rvfj9OZYK2x7+JrFWQYQ11CQow9ZAV2eP7MK5PuOy6t+WH
      vZcwKwVw/BzrN6xnxysBC5tdzp91KLqKIFLU62EuibNtDNlje3EmRqltuRuv9zje+dNoz0e1
      dOCfPgyOS9LSgRzsRUx7n1HKxuOVmlqRDYBJM7+yUT4JWCVR6W5isKFNpTBJAkY3CmWQji1Q
      aOQa6kohIF+wppWURC2dVLfeg9d3mtJzP250nMiePYZwHHJSMnz/b2IyWbwT+8mcPoLJZKne
      cBfVbQ9d8Bhe++REcxvl2x+2TNeWdiRvf9IKIZBS4p85SvGlX9pHUGpFdbz1jhR1GbPBXJEx
      ax+gMnKeXGs3SVgjk2uiya1SC0JEwbb/uBQLS1bLFA7tQGhNtVhCe1lkEmOMYXzdFlp7jyO0
      tmFCpTCVCbSfpXz9NozroQoliq88hTs2iNAmDYHaSS9gSgG0TscnGhncKdjfjdIgpnYHtLIR
      JjNl6khBSsWW5I7vxR88x+RtD1BZfwuFo7utyaetghBHND37GDKoIStjts+QkPgDvdTW30xt
      9fWvfyBKWec5kyVYuHza8C7NejXGoPJFjOuBdNDZ/Nv+ni6H5TwXZMxaAQaGy6xauQYnqaCD
      84ygWbEk06hcupQBaumkVGVtneVSG5kzR4nbe0hyRcKeZfiD54g7FuL1n6a6/maC5evRhaku
      EuP3fZrmp76PN9JvV+G0WagBkKJhAol6/XA9uVUfbt08qr9JK6s89cQaEiTprpLmHlJGqDM+
      hH9iP9GilUxmsjS98pQl8kURJDHexKhNVOcKgPVVZFAlc2QX1VWbABsJk1GAzhVpfuIRnPI4
      ldsfJFi08m0/z+kwxmCMIW7vYfQjX7T5i2z+9SHftyDjcozjasuYk5lgWZmg7UdfQWhFdfMd
      VK67iczpw6jmdmR5AuP5thhFWFMnc/YIIrbcnnDxamQU4PWdInP2GP5wnxWqtbVa6sX2UgLC
      RoJSGFM3l6ao1OlfQMgpZXGcKfJcnUaR7gCm7pwDxFFaWyxwx4etuyEFRhtEEhMvWkFl023I
      KCR/aAe1lZuIepaSOXuU4qGdiLBGsGA5mZMHGrSK8i33E6y98W0/0zqulPPpjg3hTIwQLlwx
      lVi8CuN4u5iTmWCdb6K89V6c8WHCtTeSP/AKxWN7bNe3oQEMMP6pP0SVWinufJbc4Z0gLevT
      7zuNMzGCO5kS4qbbiOmuYoxBpA/OSGl3BCFthZlOQ591RakrQv3EG21zCqbRkTqd/I6DqVWs
      orhuY2USUUDS0ok7NjRlgqkEXBd/uA/3uZ8w+vBvMXbfZwAoPftDMr0nGj2IMsf327pl19Ya
      iFrlSj76S4KII5qf+5FtQ7P+Fqobbr7aQ3rLmJMKgBAEqS3sOA7kCshm29HAVMqYMMQ4Hl7/
      WXLH99owZzrhZHUSZ2I0DdFoUOkqXTdTjE77e06jTBimFMVxL+QIaWOVS8pGZEk0yHMCXBeR
      yVnzJ0ksLyixjrIxGpHEeANnrVK56eP2vCknXMoLWsDIyiRg0EKQNHfgnT5CvHgV1RvvxBsf
      Jli+zrZ2eemXiCSifOsHLikcejlhhLCrflibMa8zlzE3FWA6jCFubkef8zGOw8Q9H7Ndoh2J
      LjajMzlkUMVozeTtDxJ3L6XlF99G1sppqFLbiTc9s1vfGXIFu5YncYPfQxK9dgANDpF9e91x
      nipdrFecCSGsY5kkDfKcTAv4jdEo14d80e5OWltqhpSUfvJ1EIKJBz9L1LUEZ6ifqLub6k13
      ITfcjEqVP+xejNEar/8MuWN7AIgWrSRcufEtPUr/zBGK239BuGQ1ldseuHyhT9dj5N5P4lQm
      SNregOE6R+F8+ctf/vKVEh7HMWG95PASkdvzIvlfPELseIzd+3FUUwvNL/6cwu4XSFo7qK29
      Ea/vDEnXYqqbbsP4GZLmNsIV64l7luL3npiiNmhlozqAcD2E7zcc3wZJrt5N2hirOK5nTSTH
      s6+rpJE3sAk1B6IQk0QIpjnVWpGWI9i6Yq2RKkZEUVpTkEaR4ghZnrQkumqZym0fQLV2UDi0
      g9yxPQjPJ/fy0+R2PY/qXICsVVDZPN7QOUSSUN28DWdsCDBT2WGl8PpOYxzngnaOub0v4g32
      2vDyhptn1aO04TomCd75U+hcAZ36O29bxiXicsiY8zuAHDyP0ApnuM9SDOIIZ2wYoRXu2BDh
      8vWMfvT3Gtf7vccpPfMYOA7V9VsRnje1PSc2jGmMsVGh2NIjTLUMuTwg0gluadSiqZnpzFAR
      BdZRDoM0N2AgThVca1tl5mesTmmNUImV4zgYV0GSWKc7dbTrkS7hWqc6c/Ig4YoNiDhCqATR
      1kV+pB9tFForMq/+yip7ayfCdZBJTOmZx3DGBtG5AqMf/RImkyO3+wXyu59HFZsZ+8QfNky9
      2vqbkXFo272/See9t4r8K0+T2/cSSWsn45/8w8si853EnK+20ItX2pU2DHCG+xFRgM7mSZra
      qK7bOsMb0oKYJMHrP4MoNiOyeRAOJo6tEpCu6Eo1VnxTmYSwZl9z3JRNOrWaCUB4vpUlJWQy
      iFwe4WfSHIO9d2M9qkeLpJgmIQ3dpXSLerSk4QMYQ37ns/Vfp+7tOAjfw4lqCEcgdDx1TJRK
      0s9tdyQR1MidOoj0vPTLnRKk2rqo3P8ZG0W6TOaPSDPvYpbRmKuFOb8DqOY2jONiXBeTzZM7
      tAN3fBjj2MkjwoDCsz9GhgHlez9KtGgVE/d8gsyR3WROH4GOrrRXUJLG/+uVXjK161NHVk6L
      8khhoz61MiaK7GzM5izPyGjI5qwJVXeYU2UxUWAL8IWw98NODIO2ypEkVmEcp5FRNlpjslnC
      ZSvJHNuDN9KP2PcSys/CyCDC8yEOACwNxPMxbobxez+GOzZE1LMMr/8MqqkFk82T2f0icnwU
      4zqEK9bZsWl9QZ/Ty4nq1nuJu5eSvEvPNrjoEzl19hxLFy2YVTu/2SJZsJTxz/0JxnGRUUDm
      +L5GAqT0s2/ijI/YHADgnTmGyeZtl7eFK/BPHkQP9NkaAZMgHDed9MZO7GwaFZrG9zHGpEqS
      hkQja+JolU5epaaqxqTtCCHqlWGOiw4D+3sQWFMrY5OCpl5n4Ljp/5OG/SqDKt7ZY+hCCVkt
      E67cRLR0Na2PfcWabukOI9JEmzsyAHFkOTxAtHTNtOe1hGSHROeaqW66HVRC81Pfxx3pZ+Ku
      jyK0wR3sI9y4ZYo4OAsYP0O08s1P95mrmFEBlFIMDI3w9e/+mOvXr+GjD937Dg/rQtSrp9zz
      J5HVsn0xqOGWbZJNNbWgm1rQhRJNP/82AEa6kEQYoHL3h3HGBske3jUlVMWYStKIEDV2ACFs
      u/RM1k7+tIsEKsHUEhvnVylTtL4wpOaMiUPLDm04ysa+r74DaWMpDWkCTxiN0QYjQFYrNjrz
      4d9FBlVyO55Dux4yCuznqNcwaEW8cNnr6onlxCj5Xc+DSqg88CniBUtBOshqGW+wF6EUmRMH
      cHf+GhGFiDgkuOWeK/OFvYswowIYA1/9zg8RwK1bZuCmXCVES9dSGx1EVMv4x/ZhcnmiZWup
      brkHk8sjJ0YbxrPK5mGsRrJ4BdJ18PpON8yQKXYn1m72/SmjO46taRKG0+z3dGeon79aVxrP
      mjN1/8FMJ8gJgcznLHO1WoE4ZanWquBIK6ueb9A2TOqfOIgzcB6BwgmqVhnripkk6djBJIri
      U48i4ojKXR9EF5rI79lO9ugejDE4o4PEC5bhDfRSvvODlLe+H3dkgNp1WygcPoCMo4ueynMt
      YUYqxGS5yplz54mjhBs2XXfJwi9bUfwMDpYzNozO5i44w8s9f4bSD/4BXAfjZ6ndcAeZM4cs
      Ka7OG1EKQ0p1NsYWv2R9ax+rBJNO1KlSSdPYBYQQCKdeX+Ai8k3WLAlrmMpkemkaZpUOoqnZ
      /j2oocuTVu60Ds+mHk5NW7iYOMEkyt7DkSQLluEMnrNVa0KgmlpwBs9bpfXqdFuHaMlqko4e
      cnu2I6KIcNla/NNHEFpRu/52qrfeN/XcohBTHke3dl6yIzxXaAxXjArRVMyzYe2qN31zvR6g
      NjlK9+obCYdPUYsla9av42LlAJcDavpJJ1pb+991iVaswz97zDaZmhzBHR20oUchMEIiooS0
      S6Kd0L51Ek3wGoqB6zA9ClSH0ZbUZlSANNgzBoJa6peQ8pO0NYe8mjWNajUbFp3WcKsx+YVo
      lHGGy9fhnjmOiAO0nydas4nC8HkwiuqG2wi33k3xh1/F7TuDURohBcJo/FOHcA7vI1h3A9nD
      u3AGzhGu2og7Oki46jVJslwePX8WcQMzKoCuDPPKiTEyusKmVQvZcXKCmze+noVYrwfYtWMH
      7X6FXw/XWNDThSfM2yEXzhr+yUMUfvZtkA4Tn/sTkjPLLY9o3U1kju0DkXJ2ZBo50spSEJwp
      Rn1jvMYgGqZPfdewWV3jOOnxq1imankSqhV7vaExketMZTM5ke4Kqakj044TF/CT7D2SrkVU
      PvBJvJOHKP7ye8i4RuGlJxrtvTLH96O7F00lfrStfcBzrTIkMe5wP2AP/6vd8v6LnmI5D4uZ
      fYDqINt3nUQNHmRDz0Ns33V6RgUACCeHkYV2iEOyzR20+zUOnx1l9UJrY862YOEtZftcr2F3
      e2OD5PpPW2f0+AGMcGzuwBhMPjNl/huN0dO6QNQLXTwPkc3Y6jLXsX5nXGtQp0Umk4b8dZrl
      nSq2t7UD6Q0c2ehPVG+f0og0CUAZ6m1cjDEIbWh+4nsQx1bJsBybuirKsWHyP6adt4MAACAA
      SURBVPkmerwMzUUbuTLCOtZCoJtbka5HtGI94catZA/uwu3vpXbXg6hpLVjmSgZ2rsiYUQFE
      pkQ0eASTJHz10ae5btOdbyjg9Jk+Vq/ZQNbVeMdf5WTVsHTd8sYBGbNt5CSEeFMZ0ZJV6E/+
      Acb3ye98DufMUYwxeKeOM/nJ36Pw7M+QQ30EazeTPbTTFqxrBWGIkT5CSmQ2dYT9zAU1AgKB
      8BQmijBRgsmY1DKyUR4jp8yaeg2BcKz5ZIzBxMrWDTSaaYk0nCkRiaFeWukMnZvmnItpIrWN
      JoGlOrhBo3hHFUrIqGbpFJVJmBxHLFlF0txO4dGvIZTCLbUQ3/HA65+nUvb0nPqZapf5O3nX
      yHizegA1fpbH9wzxwbvePgf9SjrBbwT/+H6Kz/8ckoRg8Wqq930cF4OuVtCFJkRQQyQRpe/9
      PTKs2lXdcy0dAWzSTEq7g6Qd4kwUQmS7SYiMD6S7RcorahTZNMKiThrrN5haAF4a+8dWIODI
      qZaMgN1KaBD2LOfOZrONNhg/g4hDG4JNqdtGSiY/+DmcoX5yzz9ux+J5VO7+ENHazRR/9A3c
      c6cof+x3SBYtt7fRCn/wPHGpjcILj+OfPER1690EN2y7ot/JXJYxswkUjPPY408DoCfOc1Yu
      n9VN3klEKzcwsnLDBa8Zx0EX09Mnc3kMeeIVa8ke2gXY7s9IiWpqQY6P2IkpJUJMmTRG24RZ
      g1Sarua22L7O70nDpYm9J4maMn3qJZjKFt03ehTVrXwDOFZJTJgyUnW6+gc1GxlqbDaapKWL
      pGMBzpkTNsQqBdGiFUTrb8I9dQRnuA+RRMjRQUgVIPvyM+ReegrV1omjE4RK8AZ6CQDiiMzR
      vai2LpKuRbiH9oDWJOs2v6f7k864AxiVMDw6RhIFnDh2CL9tBVvfwAe4GK7GDnAxGaI8Qe7Z
      n4EQhLfcgzM2iHvuJNn9r5J0LkTli/jH9iOz1iwyGExizQW0sSu7M41hk0wbl9ap82sQbrri
      q2ndpuswxkaS6gUzdbPIkWlNgcYkSSNKJKSc+puQ6T3t+5P2BTgDvVYxpcA4DtHqjXiH96QU
      DFDt3eiWjpRKkiO799cgBNW7P4TJ5kg6F6JLreRefpr8jmfRfpbJOx4m9+2/BwzV3/4j1Kp1
      9iRNrTHZ3GX7TuSBXXiHdqO6FxHe+vaTclduB4gmefQHP8CVhr0nh/j3//aNfYB3E9xzp/AP
      7AQguu4GolUbiVauxxkbwT13Cprb7HkDqTNrlEYJFxmH1q5XNnNbj/rUcwaNqFHdPYgTjLTm
      ijFYh9pxLqBlY6YpRp1KIUBkXITnoIMIHIn0PcsXSlLinrIdr4WUOJUxmw/QGoOwjQKO7MMk
      Kq1YA2ewD3fQloWKQg4yHiQKZ3iAcNUG24EaiBcuQx94lXjBElTPYnT3Ahvp6uyxnfq+9deI
      MKD8id+Fhcsuy/fh73kZ7/hB9Oljl6QAlwMzO8FCkPE8jLErkX4nY5pXClohowBTaiFevIJk
      8XL7upA4Q32WopDNofNNiMlRtF9CtXci+3pTh7jOE5puvmA71kVBKsv+zUZ3mLbyizQBlyKd
      /ELWawc0BrvSCyEwdafZdRrEPRwB1P0Oq1giCm2CrFgi3LA1JcW14u16EVGPMGGjSSaXwxHW
      BzFC4O/cjvf8k6iOHsq/9+eIiXEm73iYZGXKL3roY7ajRrGEM9yPHB9JnfV+1GVSgPDWuxFJ
      RLTu0mucZ4uZFSDbwu988YskccT7Th6lf3CEluKid3pslxX+sf3kf/UzkJLg9vsuIILpfBFR
      rSBHh9CFEmZ8lMqdD5N94ZfIOLArd2rnW/MlNYkMyKBmSeWGRhGNSJNoJmV7AnaVb+QU0tXf
      tS0VjTF21Y4ThOfY6JLRENoySuO4SN8B49iohxSNbnjh2utR7d3I4QESN0vcsxRTq+Id2InI
      ZBFRaE2hYgtyZACTzyFUjPRdtPYRUYB37AD5x74JQlD+3X+N0IqmXzwCGCY/+NvEC5dTu/cj
      iFqFaO31XJ5KAkiWrKT82f/pMkm7NFyUDep6PsvXbLjYJXMfxpDb/Tz+kT0gJdr1bFvC+q4m
      BOWHP0tm13ayu7Yjy5MYDIVnf4JUic0JpBGgBvVZJdYMcdxGrN/UyW+uTJ1lgTYKosSaP3Xf
      IdF24nseDec3tfeNst2nhZQIz8XEChPF6JYmJImlaiiV+if27dGa6yk8/ggiDDBK4e7fZcl2
      QXgBi9ftO2td7pT5KqS0XCUvg3v+tN1lpKWQoJMGZVv7WdAa5/wZRLWC2BRYavh7BHOyLcp0
      zNbREUGV9sf+AaEVwaKVlG+6GxnUaHrs6+hiE5MPfxZTLCFHBmn+xn9Nbyobk1AIgQ4jy9GZ
      NqGEZwlxNmSp06hRurinZpIJQnTdT8j4drJHMaKQndpV0pbrJp6WNKs728Ym11ScVo3FMURx
      I6xqHWqNyFo73gQhUc8ydKFod4BSMyIKUd0L8ceHGvez1O30/okiaeuiesu96M4edFp/LCfH
      rAKUWnHOn6H4jf8PAVTv/zhq651zIoR5OWS8d+NbKYyfJcmVMHGMrtQwhRLuuVPIygTuQC/N
      3/lr5PgIslaxOQEhSJastk220glmtE1uCc+1RLv0dVwXp60Np6MDp6XFrqJJgq6FlqZQVyQp
      rQOdJBit0cKzFlV6dkA9zCicKaUzqYklhD2S1dY8pNnj+oerK6m0/oTI+rgmItm0heCTXyBa
      swlTq+EO9U1d4zrgCPRkGV0N7Gc7d5bct/8Wd+dLjeemm1oaNHTV2UOycp2tNVix9p39Aq8w
      5nxF2KwhJSqIYGAYIWzReLR6E17vSfwTB5BhDffoARgZJupahDtwntoN20gWLKHlh/+IGB/F
      1CZsq8eUmmCksDtCZhpjVNhGW43IUCNXINOeRXba6jhEawHlCsKVDS5Po81K6kSbWmjtfyzn
      x+4IgOehi03pmcipn6FsvkGkVOjij75ux5LKNeUKKslgurpxK+NpMs7BBBEJDkgXqTXOUN/M
      z9D1qHzyi/Zxjo/gP/c44eqN6M6ema9/F+E9bwIBeJPjOHtfJlp7PbqlndyLTyDCAN3ajs7m
      cX/0PeTwILKYR2Y8S7NedR3Z0fMYY1Bj6aRJs8VG6bRG2EVks3ZyJ4pkeKRho8tCnul0CSEE
      SVMr4uwZex/fQ1Wq1DtS2EL91EZP/Y3Ga/VEWt1fSFf9hqNdD7NewDbFVr0pTdK5AKf/HOH7
      HkS2t+Mc3Yd79KAtFvrQ59ClFtyj+4lvuA1Tarnosyz889/hnTyM6uhh8kt/ccnfybwJ9A5C
      t7QRbLsf3dyGd/Y4uZ3Pkz2wA50rEK27Ed2zCFJCmQFErYp77IA1Q1LzxziSyu0fIMk3W15Q
      agbpIEDXaqhazUZxhEjtfZvw0lGMCWNqN94FwnKOnFIBmcvglIqIjG/NqdSJNnEyFT1KeUDG
      GFRrB0lHj1W6dDdonIkgZOO6xk8U29cdx5pAjiTz4lPEy68juP52mxgrNKG7F6F7FhO976GL
      T/44hjBAdXRjhER1dL9j39+VxGU5HyAOq3QtX093yefVPQfZcuPcqSJrIAopPfpVnNFBjOeh
      cwWSbntKi7r+JvwzR9GZDFRtZzYlfXS5RrJ4OX7lGPHS1YSbbkGUy2QH+yx9IkkINt+G6l5E
      ZvtTSCbtqp2kdOs4sY2ywgD/2ceRaRGLMaIx4YXrQHLhBK471WhjLSttEH3noalkdyFj0LXQ
      Zt3SXSluX4DoPY1j0hWxnngjzQMAyfI1mFwetXwNk5//U/Lf/yeK//iXBPd9hGj9jW9YIyyC
      KoWv/TdEUKP6mS+htmwjfo9UlF2G8wE2sPfVV2gt5Tl57AATlerlGttlhayWcUb6bcv1bQ8Q
      3HB7wy53z51GYOzZvZ096EITtYc/jWmyK2IFg1eZJHN4z1T8PuX2ZHZtb0QzcR1MFNtODkqj
      CiXKn/sjSn/7f9sOdMZgHJfJuz5K7snH8BrVZxIjDdoIdKGInBzH1ALrFDteSsUGUZ4kWbrc
      9huaOGUrxdI6A2+wl2DL7Ti7XoQ4tmYRNAh2avEKqp/4At7hfelZBw5yqA8hBLmffw/v4G6q
      H/mc/bsjSRYtR7d1Wo7QjudxRm0USQ6cR2/ZNnUU7bscs3aC49o4yi8haiMMVSEjNVGc4KT0
      gDot+lIxm3oCEUfk9mxH54oE626idtcHkePDJJu24rhTHz2+6wM4w324g+dxggrBb/8rZH5a
      MYkxFH78TeTIALq9G5nNWBMnThqcG2GMPb516Wr8kX6bpc1kKH7376mfTGO0RrsOZulKko1b
      cX71+FRLFqWQSiEKPYjqJBSy00yh9FwyIaBSofqx36Hw7f8+dUyUACMlmd0vIRyJcTLEK9Yj
      hwZwBnqRrot77hS5F5/CefyH9vqlK20Lx4yPcB28ofOUHv0q4vxZe6xTqYXJ3/s3ZHa+QOal
      pzC+R3D9beiNN826xgNACoG3/WlEFBDd9YFL6lBxOcYxawU4fvQEK9ZsAkK6WwscHDhLEMaU
      ijZZMlsnZTYyMkf24L/8NAYI2nsINk5rpDVdZlML0Y234/7i+5Zz8zd/DcUm1Oe/AL6PHO5H
      DPenZLUY42XsoXf1+IHnoas1iANMNm9/VzGi71y9HRYaQXTz+xBRQO77X4GRoTRKE1uSm1LI
      fBY50o+pkyZSM8q2VU8LcoYGyH7jryEJ7XnDrm87RmttHXUEplgi+OCnIUnwdzxP9qWnQUiU
      4+Jn7USLsnlknCCbiulOA0wMY1IfQ1QmoO+M7WcK6OZWgrsfssVHWqOUwjmyn8yv/oVo650k
      18/QpOwicHpP4f7wWwCI5jaSG255u19v+jVe5fboazfdkEYfXJYuK7Bk6dILEkZXE6qtC53J
      YTI5dLF00WujjVtRHT1w4CDyG9+wVV+3bcNs2IAplFCFZuT4CMGazcTrbsA7spfs0z9FuC61
      2+/H3/4UsjJhO1NUq9ZMSrtWG2ykJ3N4l+X1J+nKLizN2h60Z0BnMK5jj2wSpDUBqsEX0pks
      olZBlCdQQhA98HGSxSspfP8riMlxdKGJ8I77SBavtB2jMxDe9SCmUCL780fIvPRUo5jeUSGy
      uUS9M4ZJnWltsO0dgxr5R/4BKjVqN96Kbu2g+F++TLLhJuKPfg6AzHO/wD19HDk5QXkmBVCK
      3A/+CefkUWqf+gJqWg5Bt3agW9ohidBdV6+p1qwV4LWTfa5MfoCkcyFjv/HHSM+/oAX5jBAC
      1bMYMgV4YTt4Hma5JX2ZbI7qF/41qlrBFJrstX4OXalgWtpwX3keWZlESIl79qQ9bbKQtVSD
      RKGD0JovcZiS3QRC2X5AAnvYn0y7QsRL1+CePGI7zEURjQM7pEDnizi1SiM0mn3mZyQrrmPi
      S3+BrExS+P5XyT/9E3RLG+WHP2snlhCI0SHbl3RiHJNGqJyBc4hGaFVDpKnc9wniFWtxe0+R
      f/RrluIURojRYZyJMWS1grfnZeKP2AMM45tuR46PEm29Y+ZHGtRwD+219cqH912gAKapRPXP
      /511+HP5Gd8/a4yOIPv70KvXTrWmfw3mfHfoWdd9uh7S9d5QhihPkHl1O8bP2Mmdy2Fuuw3X
      VQgDpq3DXud6aM9vOM7ey8/h9p6CWtVWmblpwXxTM6qjBzeu2aiPEDYkCbZ7chRBGDVoCarU
      SvW3/gj/8F6ESpDDA4j6cUyN+L/d5mXVdq4Qwh7xJIRAJDHhLXcj+86S2fk80nEQQQ1v98tE
      G26CTBbd2oGcHCdZtR6nrxeRJLYWYMVaku7FOH299lGdOES84jrkmeOIJEa1diBGhohuvZt4
      402IyiTRbfdgFi61LOGexUS334tasmLmZ+954PsY3ye68wHMNL9K1s9FmMV5AhedG1FE5j//
      n7jPPIHxPMyqNTNedk3kAS6G3JM/IvfMTyn84GuN1/znnyD700fIfeO/I9LucxiDv+N5cj/9
      Z2tulFrRSqGzeYKHP91odCvCKsGHfxMVa3QQoWuBDUNKh3DDVvTYGCaKSJrb0bEiWbQCky+i
      CtZEk37aMLdRUA/1U+2NqdMjRKpw0rZkr5bJ/ehbtg4hUdZsqucWANPaTu1TX7QTMK1JSHqW
      ENy4Daf3lM1VKJtzyD32TTJP/QwG+tHZIsQJ/hM/QXcvovapLyJHBvH/5VGIX3uOwgwQguj2
      e6n9xu+j2zsvx9f19lB/hhfxE977VIgUYmyE3A+/jimWqH3s840tUbe02zOHW6f6DOnWdoyU
      6FKLZY5id4rskz9GqASTKxDc+QF0Wyemo8sWpAcBxrPJJVNsIulZDKeO2syu6yCMxju6D+Nl
      MEmCzheRSYK780WESnDOnUaUig22pnWk60e9ppnhnkWE628g+9JTtjpLCMTEOIW//X8Q5Ulb
      oJ8S2GoPfOKCxJYc6rc+S6oAumsBuSd+iDPcj25po3bvhxBBjcyPvmMz0y1t6LYOew5ym22i
      5Z48QuaFJwEwQ4MEn/rCzA13jbFtJV9zGPg7Ct8n+tN/gzjfi16/6Q0vu2YUwD26D/fMCXsa
      0rb70AuWABDc+QDR+hsbLEiAZPMtVBcts4S4jOUPmVyBZMkK3JNH8H/9DEQhwYOftH8rF6y5
      YDSVT/8+JlcgvOtBnOOHANIzw0CeOYnq6Ca452HE5ATu6aNIIXAO7Z7iBEnZqD82QqCKTenB
      gBlq932E7A+/QdLWhTh9EpkeAi5VBSMdah/+HGrhErIv/JLCD75C7X0PE225E2oVRByhehbb
      RKDr4+zfiRgbxvge0Q23oju60dk8XtcCZP85RHmSeOudJOtvRLe0pnSPuFHf4Ox+BXHvhzCd
      UxlhMTkOcYS76xW8J35Ksu0eog996h34dmeG6erGdF08Y33NKECydhPJob3oYunCqIOU6Nem
      9YWwr0Uh3r5XUT2LoGsB1c/8Pvnv/j3eicN4xw/aYvIwwDl+mOqnvmhXyjTvUa+gAmNbD8UR
      QmucwfPk//nvQWtkLjuVERbCMlYNdmJnPJLWbkxTCefwXnAk7qHdyMokGojufgj34G70oqX4
      O563O5MQ6PZum9iLY7yTR4g2bqX4D/8FMTZM8KHfRN9wK0orCn/5HyCKiVdcB45D8Z/+G6qj
      m7hzIf7ZU8jhQZxjh0humDrwLlm+hnjlOuTQgK0Oq5VJTJd1tCfGKP7Vf7RsWGU/r3NoH1xF
      BXgreO87wakM7WeIN9/ytrocZJ/+GbknHsM7sp/45jsbHBgRhujEHkbhHdhJ9l8exT2yH92z
      mMyvn8E9f5r4us24A724tYo9p6zO2Mx41n4XTJ0xlkxViQnsjmHDohrV3I7Tfw6SBHfA9g5S
      HT2YQhG9aBnh+x601I5CCTVgT8Y0CxfhnTpCvP5Gm61+9QUwGt29CGfgHHKwj3iTbY8eve8B
      vLMncPt7EZMTmAOHwffRUYw4coTk9rumHFXPI9l8M6Kzi8yBHfgHdxFftxmTK1iW6IvPgNHE
      t92Dau8kvvehRhDhkr9XY/B2/dpGkRYsbpx34L30DM6pY6gFS2ZlZl0zO8CloG7/25MPUzpz
      9yLi5deR3f53OIf2odaua1yTe+QrOCZGCIF7eD9meuitHh5uFLKk/IlYgVKopmaibe9Ht3fi
      v/gM7onDaE9hVmYbyoPrWvpP70nc3pONg/jiLdvIffNvyZ09TbLzZeS2m22Y9OVn0Y5NbKnu
      pejWdvI//g4AtQc+gRMH+HteRhw/TNzUBidPY6RDsnoTzs6XMUV35snV6MQnGz6A7lxA7bN/
      gAhqxJu2Tp3AOUvI4QGyP/qWzbTn88Trb8L91tfInt4HgGppI1l/wyXLn1cAwDmyn+xj3yJZ
      s5Hww7/R+NLDO+4nWbYK3d6FdJxGVEF3dmHyBYzrEXz888jxEXRnD5kffQfn1CGMMci+s6A0
      WgqSletw+s5gPJ/ggY/j9p7Gf+4X1lxo60RMjBJvvBH27sXtP48QkY0CtRQI3/cg7rGD9tSX
      XMGejyAdjLYOcuaZn+Ee2Yc7dA6R8zALOkl6FmOOH0R19KAKRbxjB0lWb5iqSwayz/wUmcS4
      xqAnK+jmNqp/9m9thVr3AuRd96LbOxo+0HSoFWsp//afYDwfceoE2Uf/E+rGrcQf/Y3L/t3o
      QpMN41Ym0Z0LELt3I176NaYzC00ldPvsTqW8JuoB3kxG9tFv4L26HeP5lP+X/wNm6J78OhmV
      cnrU6rQkTpIgRwbJPfZNnP5e24NfCKqf/j1MaxveqaP43/uqrbvN5cHPUP3Ml3BOH0cXSvh/
      /ZdIaXByvuX0ZLLUPvsHqPYuEBLv0G5yv/gBwV0PoIslsj99BKIQ3dphe5YGNYL7PkK8aQty
      chydLdjWKuVJMt//J9zTx5Ape1Rnc4hcHtXSBqdPEd9yF9F9H37bz9P/6t/g7tmBkZLav/9P
      UGwCo5EnT2CaWzBt7W8q400RBogktnmaoSGc//r/Qi6D+NM/I3mTDP+bYX4HAKLb7kGUJ0hW
      rX/rpKxCsfGrc+oocqifePMt6K4FRNvuI/fYN2wd8h3328opz0OOjSCiCJKEypf+HNPehffM
      L8j87Pvoljbiu96PHh1G+xKZxDijAxS+8z9IFi2n+vEv4O943trEz/2Syr/63wjX34T36osE
      H/yMrd09tJ9k2RpLaZjWEFfnizjnTtsdp7kV3dZBcNu9qLUXP19YVCt4+3aQLF2J7p65K4ha
      s86aS5FCjI1iik04L2/H/9ZXMMUmgv/1yxc8qxnvMzqMs/dV1MYbZ/YZMllMfSfq6EB9+T/Y
      5z5tV75UzEoBtIoZHR3HAE3NLeg4IEwMzaWmGTrrz13onkXUPv/Hb/0NxuC+9Bzy3BmS2+8m
      /52/s+zPKCTadl/jsG0RVMn+5LuQJMR33Idatho37QnqnD1F0t6FqCeUlCL+4McuMDny3/tH
      5NH9OKeO4f/iUURgD90WSYQc6EO+8CtUkuC8+Bz+qeOIsTG8XS9iVqwk2nb/VPLJdVGLl+Me
      2Y+RDpUv/Olb+pjZp3+Kv3M7ulhi8s/+XSMhNx1q6+1Ek2VrEi6yoWWiqc/0ViZo5rtfwzl2
      CLVvJ8Ef/89vaWyXC7PbAQworeg9dpCetTdQHhtFVIeZWLiBpe1XiN9xGSGH+8n//HuonkXU
      7v3IW44miIkx/B9+B5Ek9gAMP2O36Yo9vyzeuBW8DP7Pv4cIQ0zJFo/opmY7weMY01SCagW1
      eDnBZ34X09ZhV2kEaslycD1qD38Gvv5XyLOncY8fxIQBOo5sSeb4GEIphOcg971qOW2OwB3t
      R4wNgDEEH/2tdMAC3dmDOXIA0zKV7yAMcXpPohavAD9N+E2Ok3nkq5DNoXsW2tBqqQXeaEnz
      fdSDH4IkxvvK/4BqlfhzXyD63SZ0WweU3rxwRje3Wt5Rc+ubXnu5MSsFkK5HZ0c7Z862sKC9
      hTAr2LlngOtL2YZ9dzXrAd5MRubALtxzp3D6zhLfeu9Fv4ALZDQ1Q1c3YuA8XLcRc+owIopx
      jx0keeiTlqa8aQvhyrWIShnT2YMDiJY2gr/4sjWD2jvJ/ef/HXn+LMk9D+K+/BzOwDkwhviG
      W4k++TvQ1Ez88d8h81f/0RbJ5PKYCJvHWLcJt7sdmYRopVGJQT30cTh3EufoAczK6y549smH
      PoPeegeia0Hjdf+7/4BzYDfJ9VuJf9s2qHKOHrBNAoBw2/sJrt+Kbmm/oH5ipucpTp3AefVl
      +5/DB9F33n1Rns10Geo3v4i55wH0tLG9FcyJeoCBM8fpXLwCkwS8uucwW2+5Bc+Z9uGuYj3A
      m8kIrtuMPHEY1bOIJF940+26LkNUyzjBJCLjwuB5otvvxXvhSaLb7r3wPpmc/Ulfk1Ki80XI
      Y19LcyQmDOyZBXVEYUOOau/E2XwLcniA6FNfQBVKGMe1HSM6OqHvLMmmmwhXbMTZt4fofe/H
      fPS3rC/zms+j0glWl23qOZowaLymV63DWbEWk8kSL1jS2BleJ+u1z2rhYsT1NyJqVeJ1G96S
      6TNdhupeOON93o6MS8Gso0CDAwO0d3ZhwjJ7Dx3H81yWrlhDMee9a6JAb1tGUKP4N/8XYnyU
      4OOfJ9781oo5pJQXHOgghgZwTp8gWX89slbBOX3cEtXWbMDki5aA96t/wT2wm2jLNrxXt9sM
      9f/f3rkHx1Xdd/xz7917V9LqaUl+yZKwJdmWwWA7mHcyDISQDrQkBUpJp1A6YfrItBn+KDNN
      /+mkM8l0Om0hf7T5A8I0haZ5QEPqBhJmgBQaE4wsrOfqZb2s5+qx0q529z5P/1jbwvil69VK
      K+35/CPZ0vnq7L33d885v/P7/c7EFO6eJtxb7yQwehqnsRnj7/8OZW4W98BB7Ke/dkG9oct9
      DmUxitbfjbv3eoQPb8oVr+e5PYurvJ1z5b5KN+g1aiiJOEo8lvbwXCkHwnNRIlNQtRVFN/yd
      aOJ5FH/72fP1PTlbBcIzPUTAIPm3/wAF6UVz4Icvo504jnf4MwQGexHlFaSe/vpFfvxsXk9l
      fAzju88jQsVYf/lXUHj5Eoq5cl+lG/QaEUXF6bf0VTD+5zUC77+Dd/AQ1hM+PE2QziUIlaTL
      GzbsR4nHcKu2wsQ0XkPT8vQEcB79Cs5DDxP46Dhq2wlEfBFlfhaxfe2KGqtDAyjReYjOo0Sm
      EXWrU0U6m0gDyDJKZApFeKiR6Yt/KAS0tMDkJNx3HwSDF//87NpAlFVg/tFfXH4EUVUoKMQ5
      fAvq9ASirAKxVqmGrov2wfuQTODc8TkoLUXsql2bv50hcgr0KQKdrejtLZh33ov3iUyna+2H
      Mj9HoPU3uNcfgh016QfYMjHe+C9YiuO88wHYDmpzE0ptDfZDj0LoE5lTZ4YJDPViH7oNdWEO
      /VdvYn3ufrxz5xv4JBvXU+3uwPju8wBYf/4M3r6rVxSXU6AcJfjLn6IuIekOMwAAC6pJREFU
      RsF1/G2OXQZRsQX7nt8CltPvtIFe9A/OnsFWqCOUdIAbY0N4uxtxb7/rfHtvVz3WrvRUQn/9
      FQLdbQjdwHz0KR+dEJBMpD1DqxSkdoF8RSUiFAKUC/cZNgDSAD6Fc8MR9JPHM4owRAjUqbH0
      OuES5Qa9mlq8bTvTBasefxohBNrL30NJJvD2NF6+b9cfRhvqx917+QynS6F2txP8wYt4O2tx
      /uSZdFDcKiK278D862+m/1GSWWzOWiOnQFnQCHS2UvDjlxBFIRJf+0Y6iIuL3aB+udb2+puv
      o7/9BkI3sP/m2+k9jwzYiPfkcsgRIAsoyXR5SMW209XX1hn7rnvAsfFq6tLRmhkeLr2ZkAaQ
      BezDt6bLrJRVrEt8y0UUl2A/+AgAWg7VbcoFpAFkAy2Ac+PNV/89yYrQXv0h2vH3cH73Mbw7
      Pruq2nlfF2gzoCzMo/V0pGv4b0K0kydQUim0U62rri1HgPXG89BOHAcU3KO3+U/wdl2KXvoO
      6uw05me/gPWFh7LSzfXEefj3UVs+xP38F1dde1UOyIicGaT+0O2M94UBwY233E5Il4PLSlB7
      w+g/+DcARHkF3r5m/yJnHXkKWXPorSvekZvxjmRnSpnxARn7m/eRTJlUK4sk65upN6IMTy3S
      tCPt+svlfICsaJw9OeZckNonOXcK5QX/V1l5Pq9Y3VKZrgx3hT5cVHxY0zC/+gzaxBmcxv1X
      vd4b7npmWSPjfYD5iUHm3FLqymzCU4IaY4FYqJ76ysL82wewTIx/fR5lYgz7qT+96G1+WT/+
      QjT9tezKB9Rluo8AG+x6roFGxiaUcAJcV7MFvXgbRe4cY0sadVs2z0niflCWllBGhlCSSbT3
      3gEztbKGZeWXfPiVsVG0Ex8s59hKVp2MF8E1tctRfw37rlxlYLMjyitwvvR7BH78H6itJ9G2
      7sD9nS9fm1gygfEv/4wSj8HcDO79D65uZyWAdIOuLoqCe9udy9UYLrEOWDGqulyfqCA/R9S1
      QMYCZUMjtphOCKnffUH0pe85/OICyuxMWkdV5RogCxpyHyAblJSmy55kSmnZ+ZIqkuwgp0CS
      vEYagCSvkQYgyWukAWSD+TmUudn17oVkBchF8CqjTE5g/NO3QAisrz+L2FW33l2SXAFpAKuM
      shQ/X/JQicU2aXja5kEawCrj7W7AfvJp8Lxri+yUrCnSAFYbVcU7srJaoZL1J2MDGBseIBpP
      0bB3P8O93ZieSvP1zeiqzD2V5D4ZeYGEtcjwRJSyiip0a54lJURVgcP0ooxelGwMMssISyVw
      A4XoXpTuEQ07vsCk4lK/fblue94lxFyBSyXE+O1DJu3PaWTKZtLIyAACJdUUeUNMTCmUVW5j
      cQF01cFyXDQtHcmYywdkrLVGpsFsQoiMg+EgN65FrmjIaNA11FivynCfJFeuRa5oyJ1gSV4j
      DUCS10gDkOQ10gAkeY00AEleIw1AktdsfgMwU6teNNaNLSEWY5z3IJspsOXu90ZkUwfDadNj
      FP/sZURhEbGHv4pYhfIisdYw1rf+kfKgg/qVx1CPHqL41RcRAYP443+GCF396FRJ7rCpRwAt
      MoGaSqDOz6DGF1ZFM94xQMhLojgOojuMNjOJuhRHW5hDXZBZYBuNTT0CWE0H0yc+hkpwK7et
      imb1l+4mnohiKCbKA/djb60mdfu9CN3A3b4xzsaVLCNDIdZQQ4ZC5J5GxlOg2akxusM9WC5E
      JkbpDvfhyDPYJBuEzPIBnASnz8xSu6sG1V5geCpG7a6dyFwYyUYhs3yApSiLKZszQz24rsaS
      qTLS30lxzQFqzpZIl/kAy8h8gNzTyDgfoDQwhq4HCZZvpWD8DLquoyjLD34uxHzniobMB8g9
      jcy8QKrOocMHSZouJSUhaqrLMG2PkuLMTiKXSNaKjN2gulGAbqS/N4KF50vaSyQbgU29ESaR
      XA1pAJK8RhqAJK+RBiDJa7IaCmGaJpY84lOSw2TVAFzXzXgjbLNoCCEQQmS0eeO6bsabYblw
      LXJJI6tToFzZ7csVDbmLm3saWR0BJJJcJ+uLYHMpSnt7O5H5mO+2o4N9dHV1EY0nfbcVnkN3
      VxeW4+GYS3S0tTExE/Wl4Vgp2jvDACxExmnr6GRsyl/Sy1xkgs7ODiZnoizMTtHe3kEs6S9F
      c2p8hM6ODmYXEowO9tPV3YPlJyJCeAz299DR0cmSaTM+cprO7l4cz8e7z7XpDXfT3tGF7Ql6
      Otvo6urGcv29P4Vj0t7ZgxAe/eFO+ofO+GoPYKdidPWcxjWXaGtro+/0CCt5jXtWglOn2ugZ
      GMZ1TLo727NvAD19p9nXfIDRwX6fLQWTkVl27NxFWcj/ietmMomCwHI8wt09NB64gYmRQX8a
      poXjpBfxE+MTVG7bwbaqCl8aBaFS9u/by5nhQQaGxzjQ3Eh/b68vjZKySvY27WZ4aJCpyAy1
      dXUYvu6cQu11jdRUFjEyOs7UfJLayiCD4z6MWdXY07SXqqDF+Mw8czGb2rp6f2XwhWCgr49o
      bJH45ABeyS5YmmEh5SOeRwj6egeIxxdZnJuCYCm7anawktllbG4KgiXU7drB6EAvW+v2Zt8A
      hFAIaNqKOvhp9jY1EZ+foHtgzHfbglAJRQU6ALZQCAZU330IlZQS1NPRInUNTWh2ko/bOn1p
      aMLmo5aPadq/H0XRUANB8Px5xlwzzslTYZqb99PU1MRITxvTMR+jiKIQj0boHZqguEgjoBdQ
      WBjCTPkYWRWV+elxhqbjlBYW0tRQy2hfG1OxlX+WVCxCQglRoEE8HidUUkphoYFpOivWmJsa
      Ri/fhuK5FG/ZybbyAj5ubcVdwWgWqtzJ9opCWk+2krRdCoJG9g2gvDhIOBxGNXwGyHkeMzMz
      JFMmAV33/XcTsShj4xOMnhmjqixEZ3cYT/MXqLQ4P8Pk5CSjY5PMz82ylEigaf7Cpz468RGV
      1dWkkimCmktvdwdF5f7SMz9qaaW6eguJRJyZSATL8QgEVn7rPM9mZm6ByopSllJgxmfo6htk
      W3XVijUcM0E0lqKyrIjI7Dxzc1Es2yOg+eiHYlCoOUQiEYLl2xkJtzIWWaK8xFixRiAYAjNG
      JDLNzNwci7E4KCorebclYgssnP39bVVb6A13ZX8RLITANE0MI4jqM1PGdWxsxyMYNHx7UFzH
      xrRsFEWloCCIaabQjQI0H31wbAvLdlBUjaARwDQtggUFqD76YpkmjuuiBXSMgEbKsigIBn19
      HjOVxPUEAd1AUwSuAMPHS0EIgW1beB4Egwae6+B4AsMwVvTgnNOwLBOBStDQsW0LgYpxNvzd
      D2n3pYptWaAG0AN+XZkC1/VQVRXTTBHQDQIrcIemn8UUgYBBIKBimqb0AknyGxkKIclrpAFI
      8hppADnKJ1MfhRB4cqaaFaQBrAPHjh0D4K2fH8O8jAv8hRdeIDrSwfunBpkO/x9vtSzvYXR+
      +C7PPfccv3ivhV//8hiz5oVt33njGEsr9yzmNZu6Mlyu0t95kv8WgpaTbTQ21vKfr77Bzsab
      OFJfyC/efp9D9zwCQMsH7/Pah2f4wwfu5N3//QnH39L5xrPPEA6HaTp4M7fd1MB3vvki752O
      8uDRPbz59q/Yd/hO3vnZ63RELGpDDvfdezevv30Cd7qPGbeIP37qKcqK/LuVNytyBFgH9MIS
      Dhw4QGVZiI5TrTQfuQNdpFhIWNx6182M9qXf9gdvvJHP//Zj7N5ewt0PPMINu6twPHjosSep
      0pN8/0c/56YbD/HEk39AMpniM7fczuTEJEePHuWJx7+MaZoIzyNl2tTW1SIsC2sVKjFsJqQB
      rAPba+poaGhgd30tR47eRu+p3+AqQRZnJmnr6Ke0opTKykoqdu6m673XGY16lBQalJdXoCrw
      7ps/5dct7dTv3sO+A428/NL3mZ+dpq2jm+LSchqu286/v/Ia1SU633vlRxQUhZiZnZPriEsg
      9wEkeY0cASR5zf8Dv2eUamJkVT0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Health status vs Unhelath days' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
